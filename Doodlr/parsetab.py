
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID OP_ADD OP_DIFF OP_DIV OP_EQUALS OP_EQUALTO OP_GREATT OP_GREATTEQ OP_LESST OP_LESSTEQ OP_MOD OP_MULT OP_POW OP_SUBS PR_While PR_and PR_bool PR_circulo PR_else PR_espiral PR_estrella PR_false PR_float PR_function PR_global PR_if PR_int PR_main PR_or PR_read PR_rectangulo PR_return PR_true PR_void PR_write TO_BRACKCLO TO_BRACKOP TO_CBRACKCLO TO_CBRACKOP TO_COMA TO_FLOAT TO_INT TO_PARCLO TO_PAROP TO_PuntoComa programa : startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endProgramastartQuad :fillMainQuad : endPrograma :  cambiaScope :  varGlobales : PR_global defVariables varGlobales\n                    | empty declaraFunciones : PR_function defFuncion declaraFunciones\n                         | empty defFuncion : decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad agregaFuncion :  endProcCuad :  decParametros : decTipo ID meteVariable\n               | decTipo ID meteVariable TO_COMA decParametros  mainBloque : funcCiclos mainBloque\n            | funcCondicionales mainBloque\n            | defVariables mainBloque\n            | llamadaDeFunciones mainBloque\n            | funcIgual mainBloque\n            | funcWrite mainBloque\n            | funcRead mainBloque\n            | funcReturn mainBloque\n            | empty  setMainFuncionValores :  funcWrite : PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa funcRead : PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa funcReturn : PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa funcIgual : ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad\n                  | ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad  extraNeed : empty  funcCiclos :  PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 funcCondicionales : PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 else : agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO\n             | empty  decTipo : PR_int tipoVar\n                | PR_float tipoVar\n                | PR_bool tipoVar\n                | PR_void tipoVar defVariables : PR_int tipoVar defVar1 TO_PuntoComa\n                     | PR_float tipoVar defVar1 TO_PuntoComa\n                     | PR_bool tipoVar defVar1 TO_PuntoComa\n                     | PR_void tipoVar defVar1 TO_PuntoComa  defVar1 : variable defVar2\n                | arreglo defVar2  defVar2 : TO_COMA defVar1\n                | empty  variable : ID meteVariable  arreglo : ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArrescribeArr : empty tipoVar : empty  meteVariable : empty  defExpresiones : decExpresion\n                       | decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad\n                       | decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad  decExpresion : miniExp\n        | miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad\n        | miniExp OP_DIFF pushPilaOp  miniExp agregaComparCuad\n        | miniExp OP_LESST pushPilaOp  miniExp agregaComparCuad\n        | miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad\n        | miniExp OP_GREATT pushPilaOp  miniExp agregaComparCuad\n        | miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad  miniExp : microExp\n                | microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad\n                | microExp OP_ADD pushPilaOp miniExp  agregaSumResCuad  microExp : micromicroExp\n                 | micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad\n                 | micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad\n                 | micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad  micromicroExp : decSolucion\n                      | decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad  decSolucion : ID pushPilaVar\n                    | ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush\n                    | TO_INT agregaIntCuad\n                    | TO_FLOAT agregaFloatCuad\n                    | PR_true agregaBoolCuad\n                    | PR_false agregaBoolCuad\n                    | llamadaDeFunciones\n                    | TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp   llamadaDeFunciones : ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo\n    \t\t\t\t\t   | funcionesDibuja\n                           | empty funcionesDibuja : PR_circulo  TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad\n                        | PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad\n                        | PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad\n                        | PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad decParamFuncs : ID paramCuadruplo\n                      | ID paramCuadruplo TO_COMA decParamFuncs\n                      | empty  pushPilaOp : empty  pushPilaVar : empty  agregaIntCuad : empty  agregaFloatCuad : empty  agregaBoolCuad : empty cuadArrPush : empty agregaAndCuad :  agregaComparCuad :  agregaSumResCuad :  agregaMultDivCuad :  agregaPowCuad :  agregaIgualCuad : cuadruploAsignaArr : empty agregaWriteCuad :  agregaReadCuad :  agregaReturnCuad :  agregaIfCuadP1 :  agregaIfCuadP2 :  agregaIfCuadP3 :  whileCuadP1 :  whileCuadP2 :  whileCuadP3 :  paramCuadruplo :  eraCuadruplo :  goSubCuadruplo :  circuloCuad :  rectanguloCuad :  espiralCuad :  estrellaCuad :  empty : '
    
_lr_action_items = {'PR_global':([0,2,7,42,50,51,52,],[-2,4,4,-39,-40,-41,-42,]),'PR_function':([0,2,3,5,6,7,15,22,42,50,51,52,208,238,],[-2,-118,-5,-7,13,-118,-6,13,-39,-40,-41,-42,-12,-10,]),'PR_main':([0,2,3,5,6,7,12,14,15,22,36,42,50,51,52,208,238,],[-2,-118,-5,-7,-118,-118,21,-9,-6,-118,-8,-39,-40,-41,-42,-12,-10,]),'$end':([1,85,109,],[0,-4,-1,]),'PR_int':([4,13,42,50,51,52,53,57,58,61,62,63,64,65,66,67,68,69,73,136,176,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[8,24,-39,-40,-41,-42,-24,8,24,8,8,8,8,8,8,8,8,-81,-80,8,24,8,-113,-118,-25,-26,-27,8,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,8,-33,]),'PR_float':([4,13,42,50,51,52,53,57,58,61,62,63,64,65,66,67,68,69,73,136,176,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[9,25,-39,-40,-41,-42,-24,9,25,9,9,9,9,9,9,9,9,-81,-80,9,25,9,-113,-118,-25,-26,-27,9,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,9,-33,]),'PR_bool':([4,13,42,50,51,52,53,57,58,61,62,63,64,65,66,67,68,69,73,136,176,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[10,26,-39,-40,-41,-42,-24,10,26,10,10,10,10,10,10,10,10,-81,-80,10,26,10,-113,-118,-25,-26,-27,10,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,10,-33,]),'PR_void':([4,13,42,50,51,52,53,57,58,61,62,63,64,65,66,67,68,69,73,136,176,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[11,27,-39,-40,-41,-42,-24,11,27,11,11,11,11,11,11,11,11,-81,-80,11,27,11,-113,-118,-25,-26,-27,11,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,11,-33,]),'ID':([8,9,10,11,16,17,18,19,20,23,24,25,26,27,38,39,40,41,42,44,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,81,95,98,100,101,102,103,104,105,106,110,111,125,126,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,172,173,174,175,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,211,227,228,229,231,232,233,234,235,236,237,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-118,-118,-118,-118,31,-50,31,31,31,37,-118,-118,-118,-118,-35,-36,-37,-38,-39,31,-40,-41,-42,-24,72,72,72,72,72,72,72,72,72,-81,-80,107,118,118,128,129,130,131,132,133,134,118,-118,164,-118,72,118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,118,118,203,204,205,206,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,72,164,-113,-118,-25,-26,-27,264,265,266,267,72,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,72,-33,]),'TO_BRACKOP':([21,35,108,140,178,180,209,287,],[-3,53,136,-105,-109,211,239,292,]),'TO_PuntoComa':([28,29,30,31,32,33,34,43,45,46,47,49,55,59,73,83,84,99,113,114,115,116,117,118,119,120,121,122,123,124,126,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,201,202,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,230,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,262,263,272,273,274,275,281,282,283,284,288,289,290,291,],[42,-118,-118,-118,50,51,52,-43,-46,-44,-47,-51,-45,-118,-80,-48,-49,-90,-52,-55,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,228,229,-118,231,232,233,-118,-95,-95,-96,-96,-96,-96,-96,-96,-97,-97,-98,-98,-98,-99,-118,-113,-118,-78,-53,-54,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-70,-72,-94,-79,271,-101,281,282,283,284,-114,-115,-116,-117,-82,-83,-84,-85,]),'TO_COMA':([29,30,31,47,49,59,83,84,107,131,132,133,134,135,164,196,203,204,205,206,],[44,44,-118,-47,-51,-118,-48,-49,-118,172,173,174,175,176,-111,227,234,235,236,237,]),'TO_CBRACKOP':([31,72,118,],[48,98,156,]),'TO_PAROP':([37,54,70,71,72,74,75,76,77,78,79,80,94,95,96,98,110,111,118,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,],[-11,58,-108,95,-112,100,101,102,103,104,105,106,110,111,125,111,111,-118,-112,-118,111,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'PR_While':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,136,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,70,70,70,70,70,70,70,70,70,-81,-80,70,70,-113,-118,-25,-26,-27,70,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,70,-33,]),'PR_if':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,136,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,71,71,71,71,71,71,71,71,71,-81,-80,71,71,-113,-118,-25,-26,-27,71,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,71,-33,]),'PR_write':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,136,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,74,74,74,74,74,74,74,74,74,-81,-80,74,74,-113,-118,-25,-26,-27,74,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,74,-33,]),'PR_read':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,136,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,75,75,75,75,75,75,75,75,75,-81,-80,75,75,-113,-118,-25,-26,-27,75,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,75,-33,]),'PR_return':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,136,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,76,76,76,76,76,76,76,76,76,-81,-80,76,76,-113,-118,-25,-26,-27,76,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,76,-33,]),'PR_circulo':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,95,98,110,111,126,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,77,77,77,77,77,77,77,77,77,-81,-80,77,77,77,-118,-118,77,77,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-113,-118,-25,-26,-27,77,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,77,-33,]),'PR_rectangulo':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,95,98,110,111,126,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,78,78,78,78,78,78,78,78,78,-81,-80,78,78,78,-118,-118,78,78,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-113,-118,-25,-26,-27,78,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,78,-33,]),'PR_espiral':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,95,98,110,111,126,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,79,79,79,79,79,79,79,79,79,-81,-80,79,79,79,-118,-118,79,79,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-113,-118,-25,-26,-27,79,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,79,-33,]),'PR_estrella':([42,50,51,52,53,57,61,62,63,64,65,66,67,68,69,73,95,98,110,111,126,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,211,228,229,231,232,233,239,259,260,261,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,294,],[-39,-40,-41,-42,-24,80,80,80,80,80,80,80,80,80,-81,-80,80,80,80,-118,-118,80,80,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-113,-118,-25,-26,-27,80,-79,-100,-30,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,80,-33,]),'TO_BRACKCLO':([42,50,51,52,53,57,60,61,62,63,64,65,66,67,68,69,73,86,87,88,89,90,91,92,93,136,177,211,228,229,231,232,233,239,241,259,260,261,268,269,270,271,276,277,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,],[-39,-40,-41,-42,-24,-118,85,-118,-118,-118,-118,-118,-118,-118,-118,-23,-80,-15,-16,-17,-18,-19,-20,-21,-22,-118,208,-118,-113,-118,-25,-26,-27,-118,269,-79,-100,-30,276,-118,-28,-100,-110,-107,-34,-29,-114,-115,-116,-117,-31,-32,-82,-83,-84,-85,-118,294,-33,]),'TO_INT':([48,95,98,110,111,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,],[56,119,119,119,-118,-118,119,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'TO_PARCLO':([49,73,82,95,99,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,129,130,135,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,169,170,171,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,207,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,264,265,266,267,281,282,283,284,288,289,290,291,],[-51,-80,108,-118,-90,-118,-118,-118,140,-52,-55,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-102,-103,-104,-13,178,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-73,-91,-74,-92,-75,-93,-76,-111,197,-88,200,201,202,210,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-86,-14,-118,-95,-95,-96,-96,-96,-96,-96,-96,-97,-97,-98,-98,-98,-99,-118,-118,-113,-78,-53,-54,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-70,-72,-94,-87,-79,272,273,274,275,-114,-115,-116,-117,-82,-83,-84,-85,]),'TO_CBRACKCLO':([56,73,98,99,113,114,115,116,117,118,119,120,121,122,123,124,127,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[59,-80,-118,-90,-52,-55,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,168,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,226,-118,-95,-95,-96,-96,-96,-96,-96,-96,-97,-97,-98,-98,-98,-99,-118,-113,-78,-53,-54,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_EQUALS':([72,97,99,168,],[-118,126,-90,199,]),'OP_POW':([73,95,98,99,110,111,117,118,119,120,121,122,123,124,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,226,228,240,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,154,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-113,-78,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_MULT':([73,95,98,99,110,111,116,117,118,119,120,121,122,123,124,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,225,226,228,240,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,151,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-99,-118,-113,-78,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_DIV':([73,95,98,99,110,111,116,117,118,119,120,121,122,123,124,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,225,226,228,240,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,152,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-99,-118,-113,-78,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_MOD':([73,95,98,99,110,111,116,117,118,119,120,121,122,123,124,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,225,226,228,240,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,153,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-99,-118,-113,-78,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_SUBS':([73,95,98,99,110,111,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,222,223,224,225,226,228,240,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,149,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-98,-98,-98,-99,-118,-113,-78,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_ADD':([73,95,98,99,110,111,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,222,223,224,225,226,228,240,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,150,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-98,-98,-98,-99,-118,-113,-78,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_EQUALTO':([73,95,98,99,110,111,114,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,189,190,191,192,193,194,199,210,220,221,222,223,224,225,226,228,240,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,143,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-97,-97,-98,-98,-98,-99,-118,-113,-78,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_DIFF':([73,95,98,99,110,111,114,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,189,190,191,192,193,194,199,210,220,221,222,223,224,225,226,228,240,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,144,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-97,-97,-98,-98,-98,-99,-118,-113,-78,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_LESST':([73,95,98,99,110,111,114,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,189,190,191,192,193,194,199,210,220,221,222,223,224,225,226,228,240,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,145,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-97,-97,-98,-98,-98,-99,-118,-113,-78,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_LESSTEQ':([73,95,98,99,110,111,114,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,189,190,191,192,193,194,199,210,220,221,222,223,224,225,226,228,240,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,146,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-97,-97,-98,-98,-98,-99,-118,-113,-78,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_GREATT':([73,95,98,99,110,111,114,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,189,190,191,192,193,194,199,210,220,221,222,223,224,225,226,228,240,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,147,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-97,-97,-98,-98,-98,-99,-118,-113,-78,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'OP_GREATTEQ':([73,95,98,99,110,111,114,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,189,190,191,192,193,194,199,210,220,221,222,223,224,225,226,228,240,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,148,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-97,-97,-98,-98,-98,-99,-118,-113,-78,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'PR_and':([73,95,98,99,110,111,113,114,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,214,215,216,217,218,219,220,221,222,223,224,225,226,228,240,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,141,-55,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-96,-96,-96,-96,-96,-96,-97,-97,-98,-98,-98,-99,-118,-113,-78,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'PR_or':([73,95,98,99,110,111,113,114,115,116,117,118,119,120,121,122,123,124,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,214,215,216,217,218,219,220,221,222,223,224,225,226,228,240,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,281,282,283,284,288,289,290,291,],[-80,-118,-118,-90,-118,-118,142,-55,-62,-65,-69,-118,-118,-118,-118,-118,-77,-81,-118,-118,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-71,-118,-73,-91,-74,-92,-75,-93,-76,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-96,-96,-96,-96,-96,-96,-97,-97,-98,-98,-98,-99,-118,-113,-78,-56,-57,-58,-59,-60,-61,-63,-64,-66,-67,-68,-70,-72,-94,-79,-114,-115,-116,-117,-82,-83,-84,-85,]),'TO_FLOAT':([95,98,110,111,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,],[120,120,120,-118,-118,120,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'PR_true':([95,98,110,111,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,],[121,121,121,-118,-118,121,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'PR_false':([95,98,110,111,126,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,],[122,122,122,-118,-118,122,-89,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'PR_else':([269,278,],[-106,287,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'startQuad':([0,],[2,]),'varGlobales':([2,7,],[3,15,]),'empty':([2,6,7,8,9,10,11,22,24,25,26,27,29,30,31,57,59,61,62,63,64,65,66,67,68,72,95,98,107,110,111,118,119,120,121,122,125,126,136,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,210,211,226,227,229,230,239,269,292,],[5,14,5,17,17,17,17,14,17,17,17,17,45,45,49,69,84,69,69,69,69,69,69,69,69,99,124,124,49,124,139,99,158,160,162,162,166,139,69,124,139,139,139,139,139,139,139,139,139,139,139,139,139,139,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,139,69,257,166,261,263,69,279,69,]),'cambiaScope':([3,],[6,]),'defVariables':([4,57,61,62,63,64,65,66,67,68,136,211,239,292,],[7,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'declaraFunciones':([6,22,],[12,36,]),'tipoVar':([8,9,10,11,24,25,26,27,],[16,18,19,20,38,39,40,41,]),'defFuncion':([13,],[22,]),'decTipo':([13,58,176,],[23,81,81,]),'defVar1':([16,18,19,20,44,],[28,32,33,34,55,]),'variable':([16,18,19,20,44,],[29,29,29,29,29,]),'arreglo':([16,18,19,20,44,],[30,30,30,30,30,]),'fillMainQuad':([21,],[35,]),'defVar2':([29,30,],[43,46,]),'meteVariable':([31,107,],[47,135,]),'agregaFuncion':([37,],[54,]),'setMainFuncionValores':([53,],[57,]),'mainBloque':([57,61,62,63,64,65,66,67,68,136,211,239,292,],[60,86,87,88,89,90,91,92,93,177,241,268,293,]),'funcCiclos':([57,61,62,63,64,65,66,67,68,136,211,239,292,],[61,61,61,61,61,61,61,61,61,61,61,61,61,]),'funcCondicionales':([57,61,62,63,64,65,66,67,68,136,211,239,292,],[62,62,62,62,62,62,62,62,62,62,62,62,62,]),'llamadaDeFunciones':([57,61,62,63,64,65,66,67,68,95,98,110,136,138,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,211,239,292,],[64,64,64,64,64,64,64,64,64,123,123,123,64,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,64,64,64,]),'funcIgual':([57,61,62,63,64,65,66,67,68,136,211,239,292,],[65,65,65,65,65,65,65,65,65,65,65,65,65,]),'funcWrite':([57,61,62,63,64,65,66,67,68,136,211,239,292,],[66,66,66,66,66,66,66,66,66,66,66,66,66,]),'funcRead':([57,61,62,63,64,65,66,67,68,136,211,239,292,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'funcReturn':([57,61,62,63,64,65,66,67,68,136,211,239,292,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'funcionesDibuja':([57,61,62,63,64,65,66,67,68,95,98,110,136,138,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,211,239,292,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'decParametros':([58,176,],[82,207,]),'escribeArr':([59,],[83,]),'whileCuadP1':([70,],[94,]),'eraCuadruplo':([72,118,],[96,96,]),'pushPilaVar':([72,118,],[97,155,]),'endPrograma':([85,],[109,]),'defExpresiones':([95,98,110,138,156,167,181,182,199,],[112,127,137,179,195,198,212,213,230,]),'decExpresion':([95,98,110,138,156,167,181,182,199,],[113,113,113,113,113,113,113,113,113,]),'miniExp':([95,98,110,138,156,167,181,182,183,184,185,186,187,188,189,190,199,],[114,114,114,114,114,114,114,114,214,215,216,217,218,219,220,221,114,]),'microExp':([95,98,110,138,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,199,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,222,223,224,115,]),'micromicroExp':([95,98,110,138,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,225,116,]),'decSolucion':([95,98,110,138,156,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'pushPilaOp':([111,126,141,142,143,144,145,146,147,148,149,150,151,152,153,154,210,],[138,167,181,182,183,184,185,186,187,188,189,190,191,192,193,194,240,]),'agregaIntCuad':([119,],[157,]),'agregaFloatCuad':([120,],[159,]),'agregaBoolCuad':([121,122,],[161,163,]),'decParamFuncs':([125,227,],[165,258,]),'agregaWriteCuad':([128,],[169,]),'agregaReadCuad':([129,],[170,]),'agregaReturnCuad':([130,],[171,]),'agregaIfCuadP1':([140,],[180,]),'paramCuadruplo':([164,],[196,]),'whileCuadP2':([178,],[209,]),'endProcCuad':([208,],[238,]),'agregaAndCuad':([212,213,],[242,243,]),'agregaComparCuad':([214,215,216,217,218,219,],[244,245,246,247,248,249,]),'agregaSumResCuad':([220,221,],[250,251,]),'agregaMultDivCuad':([222,223,224,],[252,253,254,]),'agregaPowCuad':([225,],[255,]),'cuadArrPush':([226,],[256,]),'goSubCuadruplo':([228,],[259,]),'extraNeed':([229,],[260,]),'cuadruploAsignaArr':([230,],[262,]),'agregaIgualCuad':([260,271,],[270,280,]),'else':([269,],[277,]),'agregaIfCuadP2':([269,],[278,]),'whileCuadP3':([276,],[285,]),'agregaIfCuadP3':([277,],[286,]),'circuloCuad':([281,],[288,]),'rectanguloCuad':([282,],[289,]),'espiralCuad':([283,],[290,]),'estrellaCuad':([284,],[291,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma','programa',11,'p_programa','Doodlr.py',68),
  ('startQuad -> <empty>','startQuad',0,'p_startQuad','Doodlr.py',72),
  ('fillMainQuad -> <empty>','fillMainQuad',0,'p_fillMainQuad','Doodlr.py',78),
  ('endPrograma -> <empty>','endPrograma',0,'p_endPrograma','Doodlr.py',84),
  ('cambiaScope -> <empty>','cambiaScope',0,'p_cambiaScope','Doodlr.py',89),
  ('varGlobales -> PR_global defVariables varGlobales','varGlobales',3,'p_varGlobales','Doodlr.py',95),
  ('varGlobales -> empty','varGlobales',1,'p_varGlobales','Doodlr.py',96),
  ('declaraFunciones -> PR_function defFuncion declaraFunciones','declaraFunciones',3,'p_declaraFunciones','Doodlr.py',100),
  ('declaraFunciones -> empty','declaraFunciones',1,'p_declaraFunciones','Doodlr.py',101),
  ('defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad','defFuncion',10,'p_defFuncion','Doodlr.py',104),
  ('agregaFuncion -> <empty>','agregaFuncion',0,'p_agregaFuncion','Doodlr.py',107),
  ('endProcCuad -> <empty>','endProcCuad',0,'p_endProcCuad','Doodlr.py',124),
  ('decParametros -> decTipo ID meteVariable','decParametros',3,'p_decParametros','Doodlr.py',130),
  ('decParametros -> decTipo ID meteVariable TO_COMA decParametros','decParametros',5,'p_decParametros','Doodlr.py',131),
  ('mainBloque -> funcCiclos mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',135),
  ('mainBloque -> funcCondicionales mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',136),
  ('mainBloque -> defVariables mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',137),
  ('mainBloque -> llamadaDeFunciones mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',138),
  ('mainBloque -> funcIgual mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',139),
  ('mainBloque -> funcWrite mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',140),
  ('mainBloque -> funcRead mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',141),
  ('mainBloque -> funcReturn mainBloque','mainBloque',2,'p_mainBloque','Doodlr.py',142),
  ('mainBloque -> empty','mainBloque',1,'p_mainBloque','Doodlr.py',143),
  ('setMainFuncionValores -> <empty>','setMainFuncionValores',0,'p_setMainFuncionValores','Doodlr.py',147),
  ('funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa','funcWrite',6,'p_funcWrite','Doodlr.py',158),
  ('funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa','funcRead',6,'p_funcRead','Doodlr.py',162),
  ('funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa','funcReturn',6,'p_funcReturn','Doodlr.py',166),
  ('funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad','funcIgual',8,'p_funcIgual','Doodlr.py',170),
  ('funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad','funcIgual',9,'p_funcIgual','Doodlr.py',171),
  ('extraNeed -> empty','extraNeed',1,'p_extraNeed','Doodlr.py',174),
  ('funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3','funcCiclos',10,'p_funcCiclos','Doodlr.py',178),
  ('funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3','funcCondicionales',10,'p_funcCondicionales','Doodlr.py',183),
  ('else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO','else',5,'p_else','Doodlr.py',187),
  ('else -> empty','else',1,'p_else','Doodlr.py',188),
  ('decTipo -> PR_int tipoVar','decTipo',2,'p_decTipo','Doodlr.py',193),
  ('decTipo -> PR_float tipoVar','decTipo',2,'p_decTipo','Doodlr.py',194),
  ('decTipo -> PR_bool tipoVar','decTipo',2,'p_decTipo','Doodlr.py',195),
  ('decTipo -> PR_void tipoVar','decTipo',2,'p_decTipo','Doodlr.py',196),
  ('defVariables -> PR_int tipoVar defVar1 TO_PuntoComa','defVariables',4,'p_defVariables','Doodlr.py',200),
  ('defVariables -> PR_float tipoVar defVar1 TO_PuntoComa','defVariables',4,'p_defVariables','Doodlr.py',201),
  ('defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa','defVariables',4,'p_defVariables','Doodlr.py',202),
  ('defVariables -> PR_void tipoVar defVar1 TO_PuntoComa','defVariables',4,'p_defVariables','Doodlr.py',203),
  ('defVar1 -> variable defVar2','defVar1',2,'p_defVar1','Doodlr.py',206),
  ('defVar1 -> arreglo defVar2','defVar1',2,'p_defVar1','Doodlr.py',207),
  ('defVar2 -> TO_COMA defVar1','defVar2',2,'p_defVar2','Doodlr.py',210),
  ('defVar2 -> empty','defVar2',1,'p_defVar2','Doodlr.py',211),
  ('variable -> ID meteVariable','variable',2,'p_variable','Doodlr.py',215),
  ('arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr','arreglo',5,'p_arreglo','Doodlr.py',221),
  ('escribeArr -> empty','escribeArr',1,'p_escribeArr','Doodlr.py',224),
  ('tipoVar -> empty','tipoVar',1,'p_tipoVar','Doodlr.py',248),
  ('meteVariable -> empty','meteVariable',1,'p_meteVariable','Doodlr.py',254),
  ('defExpresiones -> decExpresion','defExpresiones',1,'p_defExpresiones','Doodlr.py',273),
  ('defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad','defExpresiones',5,'p_defExpresiones','Doodlr.py',274),
  ('defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad','defExpresiones',5,'p_defExpresiones','Doodlr.py',275),
  ('decExpresion -> miniExp','decExpresion',1,'p_decExpresion','Doodlr.py',280),
  ('decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',281),
  ('decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',282),
  ('decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',283),
  ('decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',284),
  ('decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',285),
  ('decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad','decExpresion',5,'p_decExpresion','Doodlr.py',286),
  ('miniExp -> microExp','miniExp',1,'p_miniExp','Doodlr.py',291),
  ('miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad','miniExp',5,'p_miniExp','Doodlr.py',292),
  ('miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad','miniExp',5,'p_miniExp','Doodlr.py',293),
  ('microExp -> micromicroExp','microExp',1,'p_microExp','Doodlr.py',298),
  ('microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad','microExp',5,'p_microExp','Doodlr.py',299),
  ('microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad','microExp',5,'p_microExp','Doodlr.py',300),
  ('microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad','microExp',5,'p_microExp','Doodlr.py',301),
  ('micromicroExp -> decSolucion','micromicroExp',1,'p_micromicroExp','Doodlr.py',305),
  ('micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad','micromicroExp',5,'p_micromicroExp','Doodlr.py',306),
  ('decSolucion -> ID pushPilaVar','decSolucion',2,'p_decSolucion','Doodlr.py',310),
  ('decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush','decSolucion',5,'p_decSolucion','Doodlr.py',311),
  ('decSolucion -> TO_INT agregaIntCuad','decSolucion',2,'p_decSolucion','Doodlr.py',312),
  ('decSolucion -> TO_FLOAT agregaFloatCuad','decSolucion',2,'p_decSolucion','Doodlr.py',313),
  ('decSolucion -> PR_true agregaBoolCuad','decSolucion',2,'p_decSolucion','Doodlr.py',314),
  ('decSolucion -> PR_false agregaBoolCuad','decSolucion',2,'p_decSolucion','Doodlr.py',315),
  ('decSolucion -> llamadaDeFunciones','decSolucion',1,'p_decSolucion','Doodlr.py',316),
  ('decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp','decSolucion',5,'p_decSolucion','Doodlr.py',317),
  ('llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo','llamadaDeFunciones',7,'p_llamadaDeFunciones','Doodlr.py',322),
  ('llamadaDeFunciones -> funcionesDibuja','llamadaDeFunciones',1,'p_llamadaDeFunciones','Doodlr.py',323),
  ('llamadaDeFunciones -> empty','llamadaDeFunciones',1,'p_llamadaDeFunciones','Doodlr.py',324),
  ('funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad','funcionesDibuja',10,'p_funcionesDibuja','Doodlr.py',327),
  ('funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad','funcionesDibuja',10,'p_funcionesDibuja','Doodlr.py',328),
  ('funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad','funcionesDibuja',10,'p_funcionesDibuja','Doodlr.py',329),
  ('funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad','funcionesDibuja',10,'p_funcionesDibuja','Doodlr.py',330),
  ('decParamFuncs -> ID paramCuadruplo','decParamFuncs',2,'p_decParamFuncs','Doodlr.py',333),
  ('decParamFuncs -> ID paramCuadruplo TO_COMA decParamFuncs','decParamFuncs',4,'p_decParamFuncs','Doodlr.py',334),
  ('decParamFuncs -> empty','decParamFuncs',1,'p_decParamFuncs','Doodlr.py',335),
  ('pushPilaOp -> empty','pushPilaOp',1,'p_pushPilaOp','Doodlr.py',341),
  ('pushPilaVar -> empty','pushPilaVar',1,'p_pushPilaVar','Doodlr.py',347),
  ('agregaIntCuad -> empty','agregaIntCuad',1,'p_agregaIntCuad','Doodlr.py',353),
  ('agregaFloatCuad -> empty','agregaFloatCuad',1,'p_agregaFloatCuad','Doodlr.py',362),
  ('agregaBoolCuad -> empty','agregaBoolCuad',1,'p_agregaBoolCuad','Doodlr.py',371),
  ('cuadArrPush -> empty','cuadArrPush',1,'p_CuadruploArrpush','Doodlr.py',382),
  ('agregaAndCuad -> <empty>','agregaAndCuad',0,'p_agregaAndCuad','Doodlr.py',406),
  ('agregaComparCuad -> <empty>','agregaComparCuad',0,'p_agregaComparCuad','Doodlr.py',429),
  ('agregaSumResCuad -> <empty>','agregaSumResCuad',0,'p_agregaSumResCuad','Doodlr.py',454),
  ('agregaMultDivCuad -> <empty>','agregaMultDivCuad',0,'p_agregaMultDivCuad','Doodlr.py',477),
  ('agregaPowCuad -> <empty>','agregaPowCuad',0,'p_agregaPowCuad','Doodlr.py',500),
  ('agregaIgualCuad -> <empty>','agregaIgualCuad',0,'p_agregaIgualCuad','Doodlr.py',526),
  ('cuadruploAsignaArr -> empty','cuadruploAsignaArr',1,'p_CuadruploAsignaARR','Doodlr.py',544),
  ('agregaWriteCuad -> <empty>','agregaWriteCuad',0,'p_agregaWriteCuad','Doodlr.py',571),
  ('agregaReadCuad -> <empty>','agregaReadCuad',0,'p_agregaReadCuad','Doodlr.py',578),
  ('agregaReturnCuad -> <empty>','agregaReturnCuad',0,'p_agregaReturnCuad','Doodlr.py',584),
  ('agregaIfCuadP1 -> <empty>','agregaIfCuadP1',0,'p_agregaIfCuadP1','Doodlr.py',592),
  ('agregaIfCuadP2 -> <empty>','agregaIfCuadP2',0,'p_agregaIfCuadP2','Doodlr.py',597),
  ('agregaIfCuadP3 -> <empty>','agregaIfCuadP3',0,'p_agregaIfCuadP3','Doodlr.py',604),
  ('whileCuadP1 -> <empty>','whileCuadP1',0,'p_whileCuadP1','Doodlr.py',610),
  ('whileCuadP2 -> <empty>','whileCuadP2',0,'p_whileCuadP2','Doodlr.py',615),
  ('whileCuadP3 -> <empty>','whileCuadP3',0,'p_whileCuadP3','Doodlr.py',620),
  ('paramCuadruplo -> <empty>','paramCuadruplo',0,'p_paramCuadruplo','Doodlr.py',630),
  ('eraCuadruplo -> <empty>','eraCuadruplo',0,'p_eraCuadruplo','Doodlr.py',639),
  ('goSubCuadruplo -> <empty>','goSubCuadruplo',0,'p_goSubCuadruplo','Doodlr.py',646),
  ('circuloCuad -> <empty>','circuloCuad',0,'p_circuloCuad','Doodlr.py',654),
  ('rectanguloCuad -> <empty>','rectanguloCuad',0,'p_rectanguloCuad','Doodlr.py',661),
  ('espiralCuad -> <empty>','espiralCuad',0,'p_espiralCuad','Doodlr.py',668),
  ('estrellaCuad -> <empty>','estrellaCuad',0,'p_estrellaCuad','Doodlr.py',675),
  ('empty -> <empty>','empty',0,'p_empty','Doodlr.py',821),
]
