Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
Rule 2     startQuad -> <empty>
Rule 3     fillMainQuad -> <empty>
Rule 4     endPrograma -> <empty>
Rule 5     cambiaScope -> <empty>
Rule 6     varGlobales -> PR_global defVariables varGlobales
Rule 7     varGlobales -> empty
Rule 8     declaraFunciones -> PR_function defFuncion declaraFunciones
Rule 9     declaraFunciones -> empty
Rule 10    defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad
Rule 11    agregaFuncion -> <empty>
Rule 12    endProcCuad -> <empty>
Rule 13    decParametros -> decTipo ID meteVariable
Rule 14    decParametros -> decTipo ID meteVariable TO_COMA decParametros
Rule 15    mainBloque -> funcCiclos mainBloque
Rule 16    mainBloque -> funcCondicionales mainBloque
Rule 17    mainBloque -> defVariables mainBloque
Rule 18    mainBloque -> llamadaDeFunciones mainBloque
Rule 19    mainBloque -> funcIgual mainBloque
Rule 20    mainBloque -> funcWrite mainBloque
Rule 21    mainBloque -> funcRead mainBloque
Rule 22    mainBloque -> funcReturn mainBloque
Rule 23    mainBloque -> empty
Rule 24    setMainFuncionValores -> <empty>
Rule 25    funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
Rule 26    funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
Rule 27    funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
Rule 28    funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
Rule 29    funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
Rule 30    extraNeed -> empty
Rule 31    funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
Rule 32    funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
Rule 33    else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO
Rule 34    else -> empty
Rule 35    decTipo -> PR_int tipoVar
Rule 36    decTipo -> PR_float tipoVar
Rule 37    decTipo -> PR_bool tipoVar
Rule 38    decTipo -> PR_void tipoVar
Rule 39    defVariables -> PR_int tipoVar defVar1 TO_PuntoComa
Rule 40    defVariables -> PR_float tipoVar defVar1 TO_PuntoComa
Rule 41    defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa
Rule 42    defVariables -> PR_void tipoVar defVar1 TO_PuntoComa
Rule 43    defVar1 -> variable defVar2
Rule 44    defVar1 -> arreglo defVar2
Rule 45    defVar2 -> TO_COMA defVar1
Rule 46    defVar2 -> empty
Rule 47    variable -> ID meteVariable
Rule 48    arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr
Rule 49    escribeArr -> empty
Rule 50    tipoVar -> empty
Rule 51    meteVariable -> empty
Rule 52    defExpresiones -> decExpresion
Rule 53    defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
Rule 54    defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
Rule 55    decExpresion -> miniExp
Rule 56    decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
Rule 57    decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
Rule 58    decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
Rule 59    decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
Rule 60    decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
Rule 61    decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
Rule 62    miniExp -> microExp
Rule 63    miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
Rule 64    miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
Rule 65    microExp -> micromicroExp
Rule 66    microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
Rule 67    microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
Rule 68    microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
Rule 69    micromicroExp -> decSolucion
Rule 70    micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
Rule 71    decSolucion -> ID pushPilaVar
Rule 72    decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
Rule 73    decSolucion -> TO_INT agregaIntCuad
Rule 74    decSolucion -> TO_FLOAT agregaFloatCuad
Rule 75    decSolucion -> PR_true agregaBoolCuad
Rule 76    decSolucion -> PR_false agregaBoolCuad
Rule 77    decSolucion -> llamadaDeFunciones
Rule 78    decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
Rule 79    llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
Rule 80    llamadaDeFunciones -> funcionesDibuja
Rule 81    llamadaDeFunciones -> empty
Rule 82    funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
Rule 83    funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
Rule 84    funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
Rule 85    funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
Rule 86    decParamFuncs -> ID paramCuadruplo
Rule 87    decParamFuncs -> ID paramCuadruplo TO_COMA decParamFuncs
Rule 88    decParamFuncs -> empty
Rule 89    pushPilaOp -> empty
Rule 90    pushPilaVar -> empty
Rule 91    agregaIntCuad -> empty
Rule 92    agregaFloatCuad -> empty
Rule 93    agregaBoolCuad -> empty
Rule 94    cuadArrPush -> empty
Rule 95    agregaAndCuad -> <empty>
Rule 96    agregaComparCuad -> <empty>
Rule 97    agregaSumResCuad -> <empty>
Rule 98    agregaMultDivCuad -> <empty>
Rule 99    agregaPowCuad -> <empty>
Rule 100   agregaIgualCuad -> <empty>
Rule 101   cuadruploAsignaArr -> empty
Rule 102   agregaWriteCuad -> <empty>
Rule 103   agregaReadCuad -> <empty>
Rule 104   agregaReturnCuad -> <empty>
Rule 105   agregaIfCuadP1 -> <empty>
Rule 106   agregaIfCuadP2 -> <empty>
Rule 107   agregaIfCuadP3 -> <empty>
Rule 108   whileCuadP1 -> <empty>
Rule 109   whileCuadP2 -> <empty>
Rule 110   whileCuadP3 -> <empty>
Rule 111   paramCuadruplo -> <empty>
Rule 112   eraCuadruplo -> <empty>
Rule 113   goSubCuadruplo -> <empty>
Rule 114   circuloCuad -> <empty>
Rule 115   rectanguloCuad -> <empty>
Rule 116   espiralCuad -> <empty>
Rule 117   estrellaCuad -> <empty>
Rule 118   empty -> <empty>

Terminals, with rules where they appear

ID                   : 10 13 14 25 26 27 28 29 47 48 71 72 79 82 82 82 83 83 83 84 84 84 85 85 85 86 87
OP_ADD               : 64
OP_DIFF              : 57
OP_DIV               : 67
OP_EQUALS            : 28 29
OP_EQUALTO           : 56
OP_GREATT            : 60
OP_GREATTEQ          : 61
OP_LESST             : 58
OP_LESSTEQ           : 59
OP_MOD               : 68
OP_MULT              : 66
OP_POW               : 70
OP_SUBS              : 63
PR_While             : 31
PR_and               : 53
PR_bool              : 37 41
PR_circulo           : 82
PR_else              : 33
PR_espiral           : 84
PR_estrella          : 85
PR_false             : 76
PR_float             : 36 40
PR_function          : 8
PR_global            : 6
PR_if                : 32
PR_int               : 35 39
PR_main              : 1
PR_or                : 54
PR_read              : 26
PR_rectangulo        : 83
PR_return            : 27
PR_true              : 75
PR_void              : 38 42
PR_write             : 25
TO_BRACKCLO          : 1 10 31 32 33
TO_BRACKOP           : 1 10 31 32 33
TO_CBRACKCLO         : 29 48 72
TO_CBRACKOP          : 29 48 72
TO_COMA              : 14 45 82 82 83 83 84 84 85 85 87
TO_FLOAT             : 74
TO_INT               : 48 73
TO_PARCLO            : 10 25 26 27 31 32 78 79 82 83 84 85
TO_PAROP             : 10 25 26 27 31 32 78 79 82 83 84 85
TO_PuntoComa         : 25 26 27 28 29 39 40 41 42 79 82 83 84 85
error                : 

Nonterminals, with rules where they appear

agregaAndCuad        : 53 54
agregaBoolCuad       : 75 76
agregaComparCuad     : 56 57 58 59 60 61
agregaFloatCuad      : 74
agregaFuncion        : 10
agregaIfCuadP1       : 32
agregaIfCuadP2       : 33
agregaIfCuadP3       : 32
agregaIgualCuad      : 28 29
agregaIntCuad        : 73
agregaMultDivCuad    : 66 67 68
agregaPowCuad        : 70
agregaReadCuad       : 26
agregaReturnCuad     : 27
agregaSumResCuad     : 63 64
agregaWriteCuad      : 25
arreglo              : 44
cambiaScope          : 1
circuloCuad          : 82
cuadArrPush          : 72
cuadruploAsignaArr   : 29
decExpresion         : 52 53 54
decParamFuncs        : 79 87
decParametros        : 10 14
decSolucion          : 69 70
decTipo              : 10 13 14
declaraFunciones     : 1 8
defExpresiones       : 28 29 29 31 32 53 54 72 78
defFuncion           : 8
defVar1              : 39 40 41 42 45
defVar2              : 43 44
defVariables         : 6 17
else                 : 32
empty                : 7 9 23 30 34 46 49 50 51 81 88 89 90 91 92 93 94 101
endProcCuad          : 10
endPrograma          : 1
eraCuadruplo         : 79
escribeArr           : 48
espiralCuad          : 84
estrellaCuad         : 85
extraNeed            : 28
fillMainQuad         : 1
funcCiclos           : 15
funcCondicionales    : 16
funcIgual            : 19
funcRead             : 21
funcReturn           : 22
funcWrite            : 20
funcionesDibuja      : 80
goSubCuadruplo       : 79
llamadaDeFunciones   : 18 77
mainBloque           : 1 10 15 16 17 18 19 20 21 22 31 32 33
meteVariable         : 13 14 47
microExp             : 62 63 64 66 67 68
micromicroExp        : 65 66 67 68 70
miniExp              : 55 56 56 57 57 58 58 59 59 60 60 61 61 63 64
paramCuadruplo       : 86 87
programa             : 0
pushPilaOp           : 28 53 54 56 57 58 59 60 61 63 64 66 67 68 70 78 78
pushPilaVar          : 28 71
rectanguloCuad       : 83
setMainFuncionValores : 1
startQuad            : 1
tipoVar              : 35 36 37 38 39 40 41 42
varGlobales          : 1 6
variable             : 43
whileCuadP1          : 31
whileCuadP2          : 31
whileCuadP3          : 31

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (2) startQuad -> .

    PR_global       reduce using rule 2 (startQuad -> .)
    PR_function     reduce using rule 2 (startQuad -> .)
    PR_main         reduce using rule 2 (startQuad -> .)

    programa                       shift and go to state 1
    startQuad                      shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> startQuad . varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (6) varGlobales -> . PR_global defVariables varGlobales
    (7) varGlobales -> . empty
    (118) empty -> .

    PR_global       shift and go to state 4
    PR_function     reduce using rule 118 (empty -> .)
    PR_main         reduce using rule 118 (empty -> .)

    varGlobales                    shift and go to state 3
    empty                          shift and go to state 5

state 3

    (1) programa -> startQuad varGlobales . cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (5) cambiaScope -> .

    PR_function     reduce using rule 5 (cambiaScope -> .)
    PR_main         reduce using rule 5 (cambiaScope -> .)

    cambiaScope                    shift and go to state 6

state 4

    (6) varGlobales -> PR_global . defVariables varGlobales
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa

    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11

    defVariables                   shift and go to state 7

state 5

    (7) varGlobales -> empty .

    PR_function     reduce using rule 7 (varGlobales -> empty .)
    PR_main         reduce using rule 7 (varGlobales -> empty .)


state 6

    (1) programa -> startQuad varGlobales cambiaScope . declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (8) declaraFunciones -> . PR_function defFuncion declaraFunciones
    (9) declaraFunciones -> . empty
    (118) empty -> .

    PR_function     shift and go to state 13
    PR_main         reduce using rule 118 (empty -> .)

    declaraFunciones               shift and go to state 12
    empty                          shift and go to state 14

state 7

    (6) varGlobales -> PR_global defVariables . varGlobales
    (6) varGlobales -> . PR_global defVariables varGlobales
    (7) varGlobales -> . empty
    (118) empty -> .

    PR_global       shift and go to state 4
    PR_function     reduce using rule 118 (empty -> .)
    PR_main         reduce using rule 118 (empty -> .)

    varGlobales                    shift and go to state 15
    empty                          shift and go to state 5

state 8

    (39) defVariables -> PR_int . tipoVar defVar1 TO_PuntoComa
    (50) tipoVar -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)

    tipoVar                        shift and go to state 16
    empty                          shift and go to state 17

state 9

    (40) defVariables -> PR_float . tipoVar defVar1 TO_PuntoComa
    (50) tipoVar -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)

    tipoVar                        shift and go to state 18
    empty                          shift and go to state 17

state 10

    (41) defVariables -> PR_bool . tipoVar defVar1 TO_PuntoComa
    (50) tipoVar -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)

    tipoVar                        shift and go to state 19
    empty                          shift and go to state 17

state 11

    (42) defVariables -> PR_void . tipoVar defVar1 TO_PuntoComa
    (50) tipoVar -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)

    tipoVar                        shift and go to state 20
    empty                          shift and go to state 17

state 12

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones . PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma

    PR_main         shift and go to state 21


state 13

    (8) declaraFunciones -> PR_function . defFuncion declaraFunciones
    (10) defFuncion -> . decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad
    (35) decTipo -> . PR_int tipoVar
    (36) decTipo -> . PR_float tipoVar
    (37) decTipo -> . PR_bool tipoVar
    (38) decTipo -> . PR_void tipoVar

    PR_int          shift and go to state 24
    PR_float        shift and go to state 25
    PR_bool         shift and go to state 26
    PR_void         shift and go to state 27

    defFuncion                     shift and go to state 22
    decTipo                        shift and go to state 23

state 14

    (9) declaraFunciones -> empty .

    PR_main         reduce using rule 9 (declaraFunciones -> empty .)


state 15

    (6) varGlobales -> PR_global defVariables varGlobales .

    PR_function     reduce using rule 6 (varGlobales -> PR_global defVariables varGlobales .)
    PR_main         reduce using rule 6 (varGlobales -> PR_global defVariables varGlobales .)


state 16

    (39) defVariables -> PR_int tipoVar . defVar1 TO_PuntoComa
    (43) defVar1 -> . variable defVar2
    (44) defVar1 -> . arreglo defVar2
    (47) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 28
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 17

    (50) tipoVar -> empty .

    ID              reduce using rule 50 (tipoVar -> empty .)


state 18

    (40) defVariables -> PR_float tipoVar . defVar1 TO_PuntoComa
    (43) defVar1 -> . variable defVar2
    (44) defVar1 -> . arreglo defVar2
    (47) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 32
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 19

    (41) defVariables -> PR_bool tipoVar . defVar1 TO_PuntoComa
    (43) defVar1 -> . variable defVar2
    (44) defVar1 -> . arreglo defVar2
    (47) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 33
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 20

    (42) defVariables -> PR_void tipoVar . defVar1 TO_PuntoComa
    (43) defVar1 -> . variable defVar2
    (44) defVar1 -> . arreglo defVar2
    (47) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 34
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 21

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main . fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (3) fillMainQuad -> .

    TO_BRACKOP      reduce using rule 3 (fillMainQuad -> .)

    fillMainQuad                   shift and go to state 35

state 22

    (8) declaraFunciones -> PR_function defFuncion . declaraFunciones
    (8) declaraFunciones -> . PR_function defFuncion declaraFunciones
    (9) declaraFunciones -> . empty
    (118) empty -> .

    PR_function     shift and go to state 13
    PR_main         reduce using rule 118 (empty -> .)

    declaraFunciones               shift and go to state 36
    empty                          shift and go to state 14

state 23

    (10) defFuncion -> decTipo . ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad

    ID              shift and go to state 37


state 24

    (35) decTipo -> PR_int . tipoVar
    (50) tipoVar -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)

    tipoVar                        shift and go to state 38
    empty                          shift and go to state 17

state 25

    (36) decTipo -> PR_float . tipoVar
    (50) tipoVar -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)

    tipoVar                        shift and go to state 39
    empty                          shift and go to state 17

state 26

    (37) decTipo -> PR_bool . tipoVar
    (50) tipoVar -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)

    tipoVar                        shift and go to state 40
    empty                          shift and go to state 17

state 27

    (38) decTipo -> PR_void . tipoVar
    (50) tipoVar -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)

    tipoVar                        shift and go to state 41
    empty                          shift and go to state 17

state 28

    (39) defVariables -> PR_int tipoVar defVar1 . TO_PuntoComa

    TO_PuntoComa    shift and go to state 42


state 29

    (43) defVar1 -> variable . defVar2
    (45) defVar2 -> . TO_COMA defVar1
    (46) defVar2 -> . empty
    (118) empty -> .

    TO_COMA         shift and go to state 44
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    defVar2                        shift and go to state 43
    empty                          shift and go to state 45

state 30

    (44) defVar1 -> arreglo . defVar2
    (45) defVar2 -> . TO_COMA defVar1
    (46) defVar2 -> . empty
    (118) empty -> .

    TO_COMA         shift and go to state 44
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    defVar2                        shift and go to state 46
    empty                          shift and go to state 45

state 31

    (47) variable -> ID . meteVariable
    (48) arreglo -> ID . TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr
    (51) meteVariable -> . empty
    (118) empty -> .

    TO_CBRACKOP     shift and go to state 48
    TO_COMA         reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    meteVariable                   shift and go to state 47
    empty                          shift and go to state 49

state 32

    (40) defVariables -> PR_float tipoVar defVar1 . TO_PuntoComa

    TO_PuntoComa    shift and go to state 50


state 33

    (41) defVariables -> PR_bool tipoVar defVar1 . TO_PuntoComa

    TO_PuntoComa    shift and go to state 51


state 34

    (42) defVariables -> PR_void tipoVar defVar1 . TO_PuntoComa

    TO_PuntoComa    shift and go to state 52


state 35

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad . TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma

    TO_BRACKOP      shift and go to state 53


state 36

    (8) declaraFunciones -> PR_function defFuncion declaraFunciones .

    PR_main         reduce using rule 8 (declaraFunciones -> PR_function defFuncion declaraFunciones .)


state 37

    (10) defFuncion -> decTipo ID . agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad
    (11) agregaFuncion -> .

    TO_PAROP        reduce using rule 11 (agregaFuncion -> .)

    agregaFuncion                  shift and go to state 54

state 38

    (35) decTipo -> PR_int tipoVar .

    ID              reduce using rule 35 (decTipo -> PR_int tipoVar .)


state 39

    (36) decTipo -> PR_float tipoVar .

    ID              reduce using rule 36 (decTipo -> PR_float tipoVar .)


state 40

    (37) decTipo -> PR_bool tipoVar .

    ID              reduce using rule 37 (decTipo -> PR_bool tipoVar .)


state 41

    (38) decTipo -> PR_void tipoVar .

    ID              reduce using rule 38 (decTipo -> PR_void tipoVar .)


state 42

    (39) defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .

    PR_global       reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_function     reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_main         reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_While        reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_if           reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_int          reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_float        reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_bool         reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_void         reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    ID              reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_write        reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_read         reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_return       reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_circulo      reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_rectangulo   reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_espiral      reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    PR_estrella     reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 39 (defVariables -> PR_int tipoVar defVar1 TO_PuntoComa .)


state 43

    (43) defVar1 -> variable defVar2 .

    TO_PuntoComa    reduce using rule 43 (defVar1 -> variable defVar2 .)


state 44

    (45) defVar2 -> TO_COMA . defVar1
    (43) defVar1 -> . variable defVar2
    (44) defVar1 -> . arreglo defVar2
    (47) variable -> . ID meteVariable
    (48) arreglo -> . ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr

    ID              shift and go to state 31

    defVar1                        shift and go to state 55
    variable                       shift and go to state 29
    arreglo                        shift and go to state 30

state 45

    (46) defVar2 -> empty .

    TO_PuntoComa    reduce using rule 46 (defVar2 -> empty .)


state 46

    (44) defVar1 -> arreglo defVar2 .

    TO_PuntoComa    reduce using rule 44 (defVar1 -> arreglo defVar2 .)


state 47

    (47) variable -> ID meteVariable .

    TO_COMA         reduce using rule 47 (variable -> ID meteVariable .)
    TO_PuntoComa    reduce using rule 47 (variable -> ID meteVariable .)


state 48

    (48) arreglo -> ID TO_CBRACKOP . TO_INT TO_CBRACKCLO escribeArr

    TO_INT          shift and go to state 56


state 49

    (51) meteVariable -> empty .

    TO_COMA         reduce using rule 51 (meteVariable -> empty .)
    TO_PuntoComa    reduce using rule 51 (meteVariable -> empty .)
    TO_PARCLO       reduce using rule 51 (meteVariable -> empty .)


state 50

    (40) defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .

    PR_global       reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_function     reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_main         reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_While        reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_if           reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_int          reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_float        reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_bool         reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_void         reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    ID              reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_write        reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_read         reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_return       reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_circulo      reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_rectangulo   reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_espiral      reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    PR_estrella     reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 40 (defVariables -> PR_float tipoVar defVar1 TO_PuntoComa .)


state 51

    (41) defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .

    PR_global       reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_function     reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_main         reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_While        reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_if           reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_int          reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_float        reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_bool         reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_void         reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    ID              reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_write        reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_read         reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_return       reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_circulo      reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_rectangulo   reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_espiral      reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    PR_estrella     reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 41 (defVariables -> PR_bool tipoVar defVar1 TO_PuntoComa .)


state 52

    (42) defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .

    PR_global       reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_function     reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_main         reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_While        reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_if           reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_int          reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_float        reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_bool         reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_void         reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    ID              reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_write        reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_read         reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_return       reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_circulo      reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_rectangulo   reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_espiral      reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    PR_estrella     reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 42 (defVariables -> PR_void tipoVar defVar1 TO_PuntoComa .)


state 53

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP . setMainFuncionValores mainBloque TO_BRACKCLO endPrograma
    (24) setMainFuncionValores -> .

    PR_While        reduce using rule 24 (setMainFuncionValores -> .)
    PR_if           reduce using rule 24 (setMainFuncionValores -> .)
    PR_int          reduce using rule 24 (setMainFuncionValores -> .)
    PR_float        reduce using rule 24 (setMainFuncionValores -> .)
    PR_bool         reduce using rule 24 (setMainFuncionValores -> .)
    PR_void         reduce using rule 24 (setMainFuncionValores -> .)
    ID              reduce using rule 24 (setMainFuncionValores -> .)
    PR_write        reduce using rule 24 (setMainFuncionValores -> .)
    PR_read         reduce using rule 24 (setMainFuncionValores -> .)
    PR_return       reduce using rule 24 (setMainFuncionValores -> .)
    PR_circulo      reduce using rule 24 (setMainFuncionValores -> .)
    PR_rectangulo   reduce using rule 24 (setMainFuncionValores -> .)
    PR_espiral      reduce using rule 24 (setMainFuncionValores -> .)
    PR_estrella     reduce using rule 24 (setMainFuncionValores -> .)
    TO_BRACKCLO     reduce using rule 24 (setMainFuncionValores -> .)

    setMainFuncionValores          shift and go to state 57

state 54

    (10) defFuncion -> decTipo ID agregaFuncion . TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad

    TO_PAROP        shift and go to state 58


state 55

    (45) defVar2 -> TO_COMA defVar1 .

    TO_PuntoComa    reduce using rule 45 (defVar2 -> TO_COMA defVar1 .)


state 56

    (48) arreglo -> ID TO_CBRACKOP TO_INT . TO_CBRACKCLO escribeArr

    TO_CBRACKCLO    shift and go to state 59


state 57

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores . mainBloque TO_BRACKCLO endPrograma
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    mainBloque                     shift and go to state 60
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 58

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP . decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad
    (13) decParametros -> . decTipo ID meteVariable
    (14) decParametros -> . decTipo ID meteVariable TO_COMA decParametros
    (35) decTipo -> . PR_int tipoVar
    (36) decTipo -> . PR_float tipoVar
    (37) decTipo -> . PR_bool tipoVar
    (38) decTipo -> . PR_void tipoVar

    PR_int          shift and go to state 24
    PR_float        shift and go to state 25
    PR_bool         shift and go to state 26
    PR_void         shift and go to state 27

    decTipo                        shift and go to state 81
    decParametros                  shift and go to state 82

state 59

    (48) arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO . escribeArr
    (49) escribeArr -> . empty
    (118) empty -> .

    TO_COMA         reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    escribeArr                     shift and go to state 83
    empty                          shift and go to state 84

state 60

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque . TO_BRACKCLO endPrograma

    TO_BRACKCLO     shift and go to state 85


state 61

    (15) mainBloque -> funcCiclos . mainBloque
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    funcCiclos                     shift and go to state 61
    mainBloque                     shift and go to state 86
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 62

    (16) mainBloque -> funcCondicionales . mainBloque
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    funcCondicionales              shift and go to state 62
    mainBloque                     shift and go to state 87
    funcCiclos                     shift and go to state 61
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 63

    (17) mainBloque -> defVariables . mainBloque
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    defVariables                   shift and go to state 63
    mainBloque                     shift and go to state 88
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 64

    (18) mainBloque -> llamadaDeFunciones . mainBloque
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    llamadaDeFunciones             shift and go to state 64
    mainBloque                     shift and go to state 89
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 65

    (19) mainBloque -> funcIgual . mainBloque
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    funcIgual                      shift and go to state 65
    mainBloque                     shift and go to state 90
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 66

    (20) mainBloque -> funcWrite . mainBloque
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    funcWrite                      shift and go to state 66
    mainBloque                     shift and go to state 91
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 67

    (21) mainBloque -> funcRead . mainBloque
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    funcRead                       shift and go to state 67
    mainBloque                     shift and go to state 92
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 68

    (22) mainBloque -> funcReturn . mainBloque
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    funcReturn                     shift and go to state 68
    mainBloque                     shift and go to state 93
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 69

    (23) mainBloque -> empty .
    (81) llamadaDeFunciones -> empty .

  ! reduce/reduce conflict for TO_BRACKCLO resolved using rule 23 (mainBloque -> empty .)
    TO_BRACKCLO     reduce using rule 23 (mainBloque -> empty .)
    PR_While        reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_if           reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_int          reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_float        reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_bool         reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_void         reduce using rule 81 (llamadaDeFunciones -> empty .)
    ID              reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_write        reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_read         reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_return       reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_circulo      reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_rectangulo   reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_espiral      reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_estrella     reduce using rule 81 (llamadaDeFunciones -> empty .)

  ! TO_BRACKCLO     [ reduce using rule 81 (llamadaDeFunciones -> empty .) ]


state 70

    (31) funcCiclos -> PR_While . whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (108) whileCuadP1 -> .

    TO_PAROP        reduce using rule 108 (whileCuadP1 -> .)

    whileCuadP1                    shift and go to state 94

state 71

    (32) funcCondicionales -> PR_if . TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3

    TO_PAROP        shift and go to state 95


state 72

    (79) llamadaDeFunciones -> ID . eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (28) funcIgual -> ID . pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> ID . TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (112) eraCuadruplo -> .
    (90) pushPilaVar -> . empty
    (118) empty -> .

    TO_CBRACKOP     shift and go to state 98
    TO_PAROP        reduce using rule 112 (eraCuadruplo -> .)
    OP_EQUALS       reduce using rule 118 (empty -> .)

    eraCuadruplo                   shift and go to state 96
    pushPilaVar                    shift and go to state 97
    empty                          shift and go to state 99

state 73

    (80) llamadaDeFunciones -> funcionesDibuja .

    PR_While        reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_if           reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_int          reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_float        reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_bool         reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_void         reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    ID              reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_write        reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_read         reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_return       reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_circulo      reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_rectangulo   reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_espiral      reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_estrella     reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    TO_BRACKCLO     reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_POW          reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_MULT         reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_DIV          reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_MOD          reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_SUBS         reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_ADD          reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_EQUALTO      reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_DIFF         reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_LESST        reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_LESSTEQ      reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_GREATT       reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    OP_GREATTEQ     reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_and          reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    PR_or           reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    TO_PARCLO       reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    TO_CBRACKCLO    reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)
    TO_PuntoComa    reduce using rule 80 (llamadaDeFunciones -> funcionesDibuja .)


state 74

    (25) funcWrite -> PR_write . TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa

    TO_PAROP        shift and go to state 100


state 75

    (26) funcRead -> PR_read . TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa

    TO_PAROP        shift and go to state 101


state 76

    (27) funcReturn -> PR_return . TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa

    TO_PAROP        shift and go to state 102


state 77

    (82) funcionesDibuja -> PR_circulo . TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    TO_PAROP        shift and go to state 103


state 78

    (83) funcionesDibuja -> PR_rectangulo . TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    TO_PAROP        shift and go to state 104


state 79

    (84) funcionesDibuja -> PR_espiral . TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    TO_PAROP        shift and go to state 105


state 80

    (85) funcionesDibuja -> PR_estrella . TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    TO_PAROP        shift and go to state 106


state 81

    (13) decParametros -> decTipo . ID meteVariable
    (14) decParametros -> decTipo . ID meteVariable TO_COMA decParametros

    ID              shift and go to state 107


state 82

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros . TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad

    TO_PARCLO       shift and go to state 108


state 83

    (48) arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr .

    TO_COMA         reduce using rule 48 (arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr .)
    TO_PuntoComa    reduce using rule 48 (arreglo -> ID TO_CBRACKOP TO_INT TO_CBRACKCLO escribeArr .)


state 84

    (49) escribeArr -> empty .

    TO_COMA         reduce using rule 49 (escribeArr -> empty .)
    TO_PuntoComa    reduce using rule 49 (escribeArr -> empty .)


state 85

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO . endPrograma
    (4) endPrograma -> .

    $end            reduce using rule 4 (endPrograma -> .)

    endPrograma                    shift and go to state 109

state 86

    (15) mainBloque -> funcCiclos mainBloque .

    TO_BRACKCLO     reduce using rule 15 (mainBloque -> funcCiclos mainBloque .)


state 87

    (16) mainBloque -> funcCondicionales mainBloque .

    TO_BRACKCLO     reduce using rule 16 (mainBloque -> funcCondicionales mainBloque .)


state 88

    (17) mainBloque -> defVariables mainBloque .

    TO_BRACKCLO     reduce using rule 17 (mainBloque -> defVariables mainBloque .)


state 89

    (18) mainBloque -> llamadaDeFunciones mainBloque .

    TO_BRACKCLO     reduce using rule 18 (mainBloque -> llamadaDeFunciones mainBloque .)


state 90

    (19) mainBloque -> funcIgual mainBloque .

    TO_BRACKCLO     reduce using rule 19 (mainBloque -> funcIgual mainBloque .)


state 91

    (20) mainBloque -> funcWrite mainBloque .

    TO_BRACKCLO     reduce using rule 20 (mainBloque -> funcWrite mainBloque .)


state 92

    (21) mainBloque -> funcRead mainBloque .

    TO_BRACKCLO     reduce using rule 21 (mainBloque -> funcRead mainBloque .)


state 93

    (22) mainBloque -> funcReturn mainBloque .

    TO_BRACKCLO     reduce using rule 22 (mainBloque -> funcReturn mainBloque .)


state 94

    (31) funcCiclos -> PR_While whileCuadP1 . TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3

    TO_PAROP        shift and go to state 110


state 95

    (32) funcCondicionales -> PR_if TO_PAROP . defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)

    defExpresiones                 shift and go to state 112
    decExpresion                   shift and go to state 113
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 96

    (79) llamadaDeFunciones -> ID eraCuadruplo . TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo

    TO_PAROP        shift and go to state 125


state 97

    (28) funcIgual -> ID pushPilaVar . OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad

    OP_EQUALS       shift and go to state 126


state 98

    (29) funcIgual -> ID TO_CBRACKOP . defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)

    defExpresiones                 shift and go to state 127
    decExpresion                   shift and go to state 113
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 99

    (90) pushPilaVar -> empty .

    OP_EQUALS       reduce using rule 90 (pushPilaVar -> empty .)
    OP_POW          reduce using rule 90 (pushPilaVar -> empty .)
    OP_MULT         reduce using rule 90 (pushPilaVar -> empty .)
    OP_DIV          reduce using rule 90 (pushPilaVar -> empty .)
    OP_MOD          reduce using rule 90 (pushPilaVar -> empty .)
    OP_SUBS         reduce using rule 90 (pushPilaVar -> empty .)
    OP_ADD          reduce using rule 90 (pushPilaVar -> empty .)
    OP_EQUALTO      reduce using rule 90 (pushPilaVar -> empty .)
    OP_DIFF         reduce using rule 90 (pushPilaVar -> empty .)
    OP_LESST        reduce using rule 90 (pushPilaVar -> empty .)
    OP_LESSTEQ      reduce using rule 90 (pushPilaVar -> empty .)
    OP_GREATT       reduce using rule 90 (pushPilaVar -> empty .)
    OP_GREATTEQ     reduce using rule 90 (pushPilaVar -> empty .)
    PR_and          reduce using rule 90 (pushPilaVar -> empty .)
    PR_or           reduce using rule 90 (pushPilaVar -> empty .)
    TO_PARCLO       reduce using rule 90 (pushPilaVar -> empty .)
    TO_CBRACKCLO    reduce using rule 90 (pushPilaVar -> empty .)
    TO_PuntoComa    reduce using rule 90 (pushPilaVar -> empty .)


state 100

    (25) funcWrite -> PR_write TO_PAROP . ID agregaWriteCuad TO_PARCLO TO_PuntoComa

    ID              shift and go to state 128


state 101

    (26) funcRead -> PR_read TO_PAROP . ID agregaReadCuad TO_PARCLO TO_PuntoComa

    ID              shift and go to state 129


state 102

    (27) funcReturn -> PR_return TO_PAROP . ID agregaReturnCuad TO_PARCLO TO_PuntoComa

    ID              shift and go to state 130


state 103

    (82) funcionesDibuja -> PR_circulo TO_PAROP . ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    ID              shift and go to state 131


state 104

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP . ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    ID              shift and go to state 132


state 105

    (84) funcionesDibuja -> PR_espiral TO_PAROP . ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    ID              shift and go to state 133


state 106

    (85) funcionesDibuja -> PR_estrella TO_PAROP . ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    ID              shift and go to state 134


state 107

    (13) decParametros -> decTipo ID . meteVariable
    (14) decParametros -> decTipo ID . meteVariable TO_COMA decParametros
    (51) meteVariable -> . empty
    (118) empty -> .

    TO_COMA         reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)

    meteVariable                   shift and go to state 135
    empty                          shift and go to state 49

state 108

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO . TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad

    TO_BRACKOP      shift and go to state 136


state 109

    (1) programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma .

    $end            reduce using rule 1 (programa -> startQuad varGlobales cambiaScope declaraFunciones PR_main fillMainQuad TO_BRACKOP setMainFuncionValores mainBloque TO_BRACKCLO endPrograma .)


state 110

    (31) funcCiclos -> PR_While whileCuadP1 TO_PAROP . defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)

    defExpresiones                 shift and go to state 137
    decExpresion                   shift and go to state 113
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 111

    (78) decSolucion -> TO_PAROP . pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 138
    empty                          shift and go to state 139

state 112

    (32) funcCondicionales -> PR_if TO_PAROP defExpresiones . TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3

    TO_PARCLO       shift and go to state 140


state 113

    (52) defExpresiones -> decExpresion .
    (53) defExpresiones -> decExpresion . PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> decExpresion . PR_or pushPilaOp defExpresiones agregaAndCuad

    TO_PARCLO       reduce using rule 52 (defExpresiones -> decExpresion .)
    TO_CBRACKCLO    reduce using rule 52 (defExpresiones -> decExpresion .)
    TO_PuntoComa    reduce using rule 52 (defExpresiones -> decExpresion .)
    PR_and          shift and go to state 141
    PR_or           shift and go to state 142


state 114

    (55) decExpresion -> miniExp .
    (56) decExpresion -> miniExp . OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> miniExp . OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> miniExp . OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> miniExp . OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> miniExp . OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> miniExp . OP_GREATTEQ pushPilaOp miniExp agregaComparCuad

    PR_and          reduce using rule 55 (decExpresion -> miniExp .)
    PR_or           reduce using rule 55 (decExpresion -> miniExp .)
    TO_PARCLO       reduce using rule 55 (decExpresion -> miniExp .)
    TO_CBRACKCLO    reduce using rule 55 (decExpresion -> miniExp .)
    TO_PuntoComa    reduce using rule 55 (decExpresion -> miniExp .)
    OP_EQUALTO      shift and go to state 143
    OP_DIFF         shift and go to state 144
    OP_LESST        shift and go to state 145
    OP_LESSTEQ      shift and go to state 146
    OP_GREATT       shift and go to state 147
    OP_GREATTEQ     shift and go to state 148


state 115

    (62) miniExp -> microExp .
    (63) miniExp -> microExp . OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> microExp . OP_ADD pushPilaOp miniExp agregaSumResCuad

    OP_EQUALTO      reduce using rule 62 (miniExp -> microExp .)
    OP_DIFF         reduce using rule 62 (miniExp -> microExp .)
    OP_LESST        reduce using rule 62 (miniExp -> microExp .)
    OP_LESSTEQ      reduce using rule 62 (miniExp -> microExp .)
    OP_GREATT       reduce using rule 62 (miniExp -> microExp .)
    OP_GREATTEQ     reduce using rule 62 (miniExp -> microExp .)
    PR_and          reduce using rule 62 (miniExp -> microExp .)
    PR_or           reduce using rule 62 (miniExp -> microExp .)
    TO_PARCLO       reduce using rule 62 (miniExp -> microExp .)
    TO_CBRACKCLO    reduce using rule 62 (miniExp -> microExp .)
    TO_PuntoComa    reduce using rule 62 (miniExp -> microExp .)
    OP_SUBS         shift and go to state 149
    OP_ADD          shift and go to state 150


state 116

    (65) microExp -> micromicroExp .
    (66) microExp -> micromicroExp . OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> micromicroExp . OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> micromicroExp . OP_MOD pushPilaOp microExp agregaMultDivCuad

    OP_SUBS         reduce using rule 65 (microExp -> micromicroExp .)
    OP_ADD          reduce using rule 65 (microExp -> micromicroExp .)
    OP_EQUALTO      reduce using rule 65 (microExp -> micromicroExp .)
    OP_DIFF         reduce using rule 65 (microExp -> micromicroExp .)
    OP_LESST        reduce using rule 65 (microExp -> micromicroExp .)
    OP_LESSTEQ      reduce using rule 65 (microExp -> micromicroExp .)
    OP_GREATT       reduce using rule 65 (microExp -> micromicroExp .)
    OP_GREATTEQ     reduce using rule 65 (microExp -> micromicroExp .)
    PR_and          reduce using rule 65 (microExp -> micromicroExp .)
    PR_or           reduce using rule 65 (microExp -> micromicroExp .)
    TO_PARCLO       reduce using rule 65 (microExp -> micromicroExp .)
    TO_CBRACKCLO    reduce using rule 65 (microExp -> micromicroExp .)
    TO_PuntoComa    reduce using rule 65 (microExp -> micromicroExp .)
    OP_MULT         shift and go to state 151
    OP_DIV          shift and go to state 152
    OP_MOD          shift and go to state 153


state 117

    (69) micromicroExp -> decSolucion .
    (70) micromicroExp -> decSolucion . OP_POW pushPilaOp micromicroExp agregaPowCuad

    OP_MULT         reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_DIV          reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_MOD          reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_SUBS         reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_ADD          reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_EQUALTO      reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_DIFF         reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_LESST        reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_LESSTEQ      reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_GREATT       reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_GREATTEQ     reduce using rule 69 (micromicroExp -> decSolucion .)
    PR_and          reduce using rule 69 (micromicroExp -> decSolucion .)
    PR_or           reduce using rule 69 (micromicroExp -> decSolucion .)
    TO_PARCLO       reduce using rule 69 (micromicroExp -> decSolucion .)
    TO_CBRACKCLO    reduce using rule 69 (micromicroExp -> decSolucion .)
    TO_PuntoComa    reduce using rule 69 (micromicroExp -> decSolucion .)
    OP_POW          shift and go to state 154


state 118

    (71) decSolucion -> ID . pushPilaVar
    (72) decSolucion -> ID . TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (79) llamadaDeFunciones -> ID . eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (90) pushPilaVar -> . empty
    (112) eraCuadruplo -> .
    (118) empty -> .

    TO_CBRACKOP     shift and go to state 156
    TO_PAROP        reduce using rule 112 (eraCuadruplo -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaVar                    shift and go to state 155
    eraCuadruplo                   shift and go to state 96
    empty                          shift and go to state 99

state 119

    (73) decSolucion -> TO_INT . agregaIntCuad
    (91) agregaIntCuad -> . empty
    (118) empty -> .

    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    agregaIntCuad                  shift and go to state 157
    empty                          shift and go to state 158

state 120

    (74) decSolucion -> TO_FLOAT . agregaFloatCuad
    (92) agregaFloatCuad -> . empty
    (118) empty -> .

    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    agregaFloatCuad                shift and go to state 159
    empty                          shift and go to state 160

state 121

    (75) decSolucion -> PR_true . agregaBoolCuad
    (93) agregaBoolCuad -> . empty
    (118) empty -> .

    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    agregaBoolCuad                 shift and go to state 161
    empty                          shift and go to state 162

state 122

    (76) decSolucion -> PR_false . agregaBoolCuad
    (93) agregaBoolCuad -> . empty
    (118) empty -> .

    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    agregaBoolCuad                 shift and go to state 163
    empty                          shift and go to state 162

state 123

    (77) decSolucion -> llamadaDeFunciones .

    OP_POW          reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_MULT         reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_DIV          reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_MOD          reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_SUBS         reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_ADD          reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_EQUALTO      reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_DIFF         reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_LESST        reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_LESSTEQ      reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_GREATT       reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    OP_GREATTEQ     reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    PR_and          reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    PR_or           reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    TO_PARCLO       reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    TO_CBRACKCLO    reduce using rule 77 (decSolucion -> llamadaDeFunciones .)
    TO_PuntoComa    reduce using rule 77 (decSolucion -> llamadaDeFunciones .)


state 124

    (81) llamadaDeFunciones -> empty .

    OP_POW          reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_MULT         reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_DIV          reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_MOD          reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_SUBS         reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_ADD          reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_EQUALTO      reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_DIFF         reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_LESST        reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_LESSTEQ      reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_GREATT       reduce using rule 81 (llamadaDeFunciones -> empty .)
    OP_GREATTEQ     reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_and          reduce using rule 81 (llamadaDeFunciones -> empty .)
    PR_or           reduce using rule 81 (llamadaDeFunciones -> empty .)
    TO_PARCLO       reduce using rule 81 (llamadaDeFunciones -> empty .)
    TO_CBRACKCLO    reduce using rule 81 (llamadaDeFunciones -> empty .)
    TO_PuntoComa    reduce using rule 81 (llamadaDeFunciones -> empty .)


state 125

    (79) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP . decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (86) decParamFuncs -> . ID paramCuadruplo
    (87) decParamFuncs -> . ID paramCuadruplo TO_COMA decParamFuncs
    (88) decParamFuncs -> . empty
    (118) empty -> .

    ID              shift and go to state 164
    TO_PARCLO       reduce using rule 118 (empty -> .)

    decParamFuncs                  shift and go to state 165
    empty                          shift and go to state 166

state 126

    (28) funcIgual -> ID pushPilaVar OP_EQUALS . pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 167
    empty                          shift and go to state 139

state 127

    (29) funcIgual -> ID TO_CBRACKOP defExpresiones . TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad

    TO_CBRACKCLO    shift and go to state 168


state 128

    (25) funcWrite -> PR_write TO_PAROP ID . agregaWriteCuad TO_PARCLO TO_PuntoComa
    (102) agregaWriteCuad -> .

    TO_PARCLO       reduce using rule 102 (agregaWriteCuad -> .)

    agregaWriteCuad                shift and go to state 169

state 129

    (26) funcRead -> PR_read TO_PAROP ID . agregaReadCuad TO_PARCLO TO_PuntoComa
    (103) agregaReadCuad -> .

    TO_PARCLO       reduce using rule 103 (agregaReadCuad -> .)

    agregaReadCuad                 shift and go to state 170

state 130

    (27) funcReturn -> PR_return TO_PAROP ID . agregaReturnCuad TO_PARCLO TO_PuntoComa
    (104) agregaReturnCuad -> .

    TO_PARCLO       reduce using rule 104 (agregaReturnCuad -> .)

    agregaReturnCuad               shift and go to state 171

state 131

    (82) funcionesDibuja -> PR_circulo TO_PAROP ID . TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    TO_COMA         shift and go to state 172


state 132

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP ID . TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    TO_COMA         shift and go to state 173


state 133

    (84) funcionesDibuja -> PR_espiral TO_PAROP ID . TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    TO_COMA         shift and go to state 174


state 134

    (85) funcionesDibuja -> PR_estrella TO_PAROP ID . TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    TO_COMA         shift and go to state 175


state 135

    (13) decParametros -> decTipo ID meteVariable .
    (14) decParametros -> decTipo ID meteVariable . TO_COMA decParametros

    TO_PARCLO       reduce using rule 13 (decParametros -> decTipo ID meteVariable .)
    TO_COMA         shift and go to state 176


state 136

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP . mainBloque TO_BRACKCLO endProcCuad
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    mainBloque                     shift and go to state 177
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 137

    (31) funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones . TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3

    TO_PARCLO       shift and go to state 178


state 138

    (78) decSolucion -> TO_PAROP pushPilaOp . defExpresiones TO_PARCLO pushPilaOp
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)

    defExpresiones                 shift and go to state 179
    decExpresion                   shift and go to state 113
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 139

    (89) pushPilaOp -> empty .

    ID              reduce using rule 89 (pushPilaOp -> empty .)
    TO_INT          reduce using rule 89 (pushPilaOp -> empty .)
    TO_FLOAT        reduce using rule 89 (pushPilaOp -> empty .)
    PR_true         reduce using rule 89 (pushPilaOp -> empty .)
    PR_false        reduce using rule 89 (pushPilaOp -> empty .)
    TO_PAROP        reduce using rule 89 (pushPilaOp -> empty .)
    PR_circulo      reduce using rule 89 (pushPilaOp -> empty .)
    PR_rectangulo   reduce using rule 89 (pushPilaOp -> empty .)
    PR_espiral      reduce using rule 89 (pushPilaOp -> empty .)
    PR_estrella     reduce using rule 89 (pushPilaOp -> empty .)
    TO_PARCLO       reduce using rule 89 (pushPilaOp -> empty .)
    PR_and          reduce using rule 89 (pushPilaOp -> empty .)
    PR_or           reduce using rule 89 (pushPilaOp -> empty .)
    OP_EQUALTO      reduce using rule 89 (pushPilaOp -> empty .)
    OP_DIFF         reduce using rule 89 (pushPilaOp -> empty .)
    OP_LESST        reduce using rule 89 (pushPilaOp -> empty .)
    OP_LESSTEQ      reduce using rule 89 (pushPilaOp -> empty .)
    OP_GREATT       reduce using rule 89 (pushPilaOp -> empty .)
    OP_GREATTEQ     reduce using rule 89 (pushPilaOp -> empty .)
    OP_SUBS         reduce using rule 89 (pushPilaOp -> empty .)
    OP_ADD          reduce using rule 89 (pushPilaOp -> empty .)
    OP_MULT         reduce using rule 89 (pushPilaOp -> empty .)
    OP_DIV          reduce using rule 89 (pushPilaOp -> empty .)
    OP_MOD          reduce using rule 89 (pushPilaOp -> empty .)
    OP_POW          reduce using rule 89 (pushPilaOp -> empty .)
    TO_PuntoComa    reduce using rule 89 (pushPilaOp -> empty .)
    TO_CBRACKCLO    reduce using rule 89 (pushPilaOp -> empty .)


state 140

    (32) funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO . agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (105) agregaIfCuadP1 -> .

    TO_BRACKOP      reduce using rule 105 (agregaIfCuadP1 -> .)

    agregaIfCuadP1                 shift and go to state 180

state 141

    (53) defExpresiones -> decExpresion PR_and . pushPilaOp defExpresiones agregaAndCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 181
    empty                          shift and go to state 139

state 142

    (54) defExpresiones -> decExpresion PR_or . pushPilaOp defExpresiones agregaAndCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 182
    empty                          shift and go to state 139

state 143

    (56) decExpresion -> miniExp OP_EQUALTO . pushPilaOp miniExp agregaComparCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 183
    empty                          shift and go to state 139

state 144

    (57) decExpresion -> miniExp OP_DIFF . pushPilaOp miniExp agregaComparCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 184
    empty                          shift and go to state 139

state 145

    (58) decExpresion -> miniExp OP_LESST . pushPilaOp miniExp agregaComparCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 185
    empty                          shift and go to state 139

state 146

    (59) decExpresion -> miniExp OP_LESSTEQ . pushPilaOp miniExp agregaComparCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 186
    empty                          shift and go to state 139

state 147

    (60) decExpresion -> miniExp OP_GREATT . pushPilaOp miniExp agregaComparCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 187
    empty                          shift and go to state 139

state 148

    (61) decExpresion -> miniExp OP_GREATTEQ . pushPilaOp miniExp agregaComparCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 188
    empty                          shift and go to state 139

state 149

    (63) miniExp -> microExp OP_SUBS . pushPilaOp miniExp agregaSumResCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 189
    empty                          shift and go to state 139

state 150

    (64) miniExp -> microExp OP_ADD . pushPilaOp miniExp agregaSumResCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 190
    empty                          shift and go to state 139

state 151

    (66) microExp -> micromicroExp OP_MULT . pushPilaOp microExp agregaMultDivCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 191
    empty                          shift and go to state 139

state 152

    (67) microExp -> micromicroExp OP_DIV . pushPilaOp microExp agregaMultDivCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 192
    empty                          shift and go to state 139

state 153

    (68) microExp -> micromicroExp OP_MOD . pushPilaOp microExp agregaMultDivCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 193
    empty                          shift and go to state 139

state 154

    (70) micromicroExp -> decSolucion OP_POW . pushPilaOp micromicroExp agregaPowCuad
    (89) pushPilaOp -> . empty
    (118) empty -> .

    ID              reduce using rule 118 (empty -> .)
    TO_INT          reduce using rule 118 (empty -> .)
    TO_FLOAT        reduce using rule 118 (empty -> .)
    PR_true         reduce using rule 118 (empty -> .)
    PR_false        reduce using rule 118 (empty -> .)
    TO_PAROP        reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 194
    empty                          shift and go to state 139

state 155

    (71) decSolucion -> ID pushPilaVar .

    OP_POW          reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_MULT         reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_DIV          reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_MOD          reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_SUBS         reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_ADD          reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_EQUALTO      reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_DIFF         reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_LESST        reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_LESSTEQ      reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_GREATT       reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    OP_GREATTEQ     reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    PR_and          reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    PR_or           reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    TO_PARCLO       reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    TO_CBRACKCLO    reduce using rule 71 (decSolucion -> ID pushPilaVar .)
    TO_PuntoComa    reduce using rule 71 (decSolucion -> ID pushPilaVar .)


state 156

    (72) decSolucion -> ID TO_CBRACKOP . defExpresiones TO_CBRACKCLO cuadArrPush
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)

    defExpresiones                 shift and go to state 195
    decExpresion                   shift and go to state 113
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 157

    (73) decSolucion -> TO_INT agregaIntCuad .

    OP_POW          reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_MULT         reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_DIV          reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_MOD          reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_SUBS         reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_ADD          reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_EQUALTO      reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_DIFF         reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_LESST        reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_LESSTEQ      reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_GREATT       reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    OP_GREATTEQ     reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    PR_and          reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    PR_or           reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    TO_PARCLO       reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    TO_CBRACKCLO    reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)
    TO_PuntoComa    reduce using rule 73 (decSolucion -> TO_INT agregaIntCuad .)


state 158

    (91) agregaIntCuad -> empty .

    OP_POW          reduce using rule 91 (agregaIntCuad -> empty .)
    OP_MULT         reduce using rule 91 (agregaIntCuad -> empty .)
    OP_DIV          reduce using rule 91 (agregaIntCuad -> empty .)
    OP_MOD          reduce using rule 91 (agregaIntCuad -> empty .)
    OP_SUBS         reduce using rule 91 (agregaIntCuad -> empty .)
    OP_ADD          reduce using rule 91 (agregaIntCuad -> empty .)
    OP_EQUALTO      reduce using rule 91 (agregaIntCuad -> empty .)
    OP_DIFF         reduce using rule 91 (agregaIntCuad -> empty .)
    OP_LESST        reduce using rule 91 (agregaIntCuad -> empty .)
    OP_LESSTEQ      reduce using rule 91 (agregaIntCuad -> empty .)
    OP_GREATT       reduce using rule 91 (agregaIntCuad -> empty .)
    OP_GREATTEQ     reduce using rule 91 (agregaIntCuad -> empty .)
    PR_and          reduce using rule 91 (agregaIntCuad -> empty .)
    PR_or           reduce using rule 91 (agregaIntCuad -> empty .)
    TO_PARCLO       reduce using rule 91 (agregaIntCuad -> empty .)
    TO_CBRACKCLO    reduce using rule 91 (agregaIntCuad -> empty .)
    TO_PuntoComa    reduce using rule 91 (agregaIntCuad -> empty .)


state 159

    (74) decSolucion -> TO_FLOAT agregaFloatCuad .

    OP_POW          reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_MULT         reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_DIV          reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_MOD          reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_SUBS         reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_ADD          reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_EQUALTO      reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_DIFF         reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_LESST        reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_LESSTEQ      reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_GREATT       reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    OP_GREATTEQ     reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    PR_and          reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    PR_or           reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    TO_PARCLO       reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    TO_CBRACKCLO    reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)
    TO_PuntoComa    reduce using rule 74 (decSolucion -> TO_FLOAT agregaFloatCuad .)


state 160

    (92) agregaFloatCuad -> empty .

    OP_POW          reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_MULT         reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_DIV          reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_MOD          reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_SUBS         reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_ADD          reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_EQUALTO      reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_DIFF         reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_LESST        reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_LESSTEQ      reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_GREATT       reduce using rule 92 (agregaFloatCuad -> empty .)
    OP_GREATTEQ     reduce using rule 92 (agregaFloatCuad -> empty .)
    PR_and          reduce using rule 92 (agregaFloatCuad -> empty .)
    PR_or           reduce using rule 92 (agregaFloatCuad -> empty .)
    TO_PARCLO       reduce using rule 92 (agregaFloatCuad -> empty .)
    TO_CBRACKCLO    reduce using rule 92 (agregaFloatCuad -> empty .)
    TO_PuntoComa    reduce using rule 92 (agregaFloatCuad -> empty .)


state 161

    (75) decSolucion -> PR_true agregaBoolCuad .

    OP_POW          reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_MULT         reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_DIV          reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_MOD          reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_SUBS         reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_ADD          reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_EQUALTO      reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_DIFF         reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_LESST        reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_LESSTEQ      reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_GREATT       reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    OP_GREATTEQ     reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    PR_and          reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    PR_or           reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    TO_PARCLO       reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    TO_CBRACKCLO    reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)
    TO_PuntoComa    reduce using rule 75 (decSolucion -> PR_true agregaBoolCuad .)


state 162

    (93) agregaBoolCuad -> empty .

    OP_POW          reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_MULT         reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_DIV          reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_MOD          reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_SUBS         reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_ADD          reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_EQUALTO      reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_DIFF         reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_LESST        reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_LESSTEQ      reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_GREATT       reduce using rule 93 (agregaBoolCuad -> empty .)
    OP_GREATTEQ     reduce using rule 93 (agregaBoolCuad -> empty .)
    PR_and          reduce using rule 93 (agregaBoolCuad -> empty .)
    PR_or           reduce using rule 93 (agregaBoolCuad -> empty .)
    TO_PARCLO       reduce using rule 93 (agregaBoolCuad -> empty .)
    TO_CBRACKCLO    reduce using rule 93 (agregaBoolCuad -> empty .)
    TO_PuntoComa    reduce using rule 93 (agregaBoolCuad -> empty .)


state 163

    (76) decSolucion -> PR_false agregaBoolCuad .

    OP_POW          reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_MULT         reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_DIV          reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_MOD          reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_SUBS         reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_ADD          reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_EQUALTO      reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_DIFF         reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_LESST        reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_LESSTEQ      reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_GREATT       reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    OP_GREATTEQ     reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    PR_and          reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    PR_or           reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    TO_PARCLO       reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    TO_CBRACKCLO    reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)
    TO_PuntoComa    reduce using rule 76 (decSolucion -> PR_false agregaBoolCuad .)


state 164

    (86) decParamFuncs -> ID . paramCuadruplo
    (87) decParamFuncs -> ID . paramCuadruplo TO_COMA decParamFuncs
    (111) paramCuadruplo -> .

    TO_COMA         reduce using rule 111 (paramCuadruplo -> .)
    TO_PARCLO       reduce using rule 111 (paramCuadruplo -> .)

    paramCuadruplo                 shift and go to state 196

state 165

    (79) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs . TO_PARCLO TO_PuntoComa goSubCuadruplo

    TO_PARCLO       shift and go to state 197


state 166

    (88) decParamFuncs -> empty .

    TO_PARCLO       reduce using rule 88 (decParamFuncs -> empty .)


state 167

    (28) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp . defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    defExpresiones                 shift and go to state 198
    decExpresion                   shift and go to state 113
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 168

    (29) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO . OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad

    OP_EQUALS       shift and go to state 199


state 169

    (25) funcWrite -> PR_write TO_PAROP ID agregaWriteCuad . TO_PARCLO TO_PuntoComa

    TO_PARCLO       shift and go to state 200


state 170

    (26) funcRead -> PR_read TO_PAROP ID agregaReadCuad . TO_PARCLO TO_PuntoComa

    TO_PARCLO       shift and go to state 201


state 171

    (27) funcReturn -> PR_return TO_PAROP ID agregaReturnCuad . TO_PARCLO TO_PuntoComa

    TO_PARCLO       shift and go to state 202


state 172

    (82) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA . ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    ID              shift and go to state 203


state 173

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA . ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    ID              shift and go to state 204


state 174

    (84) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA . ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    ID              shift and go to state 205


state 175

    (85) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA . ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    ID              shift and go to state 206


state 176

    (14) decParametros -> decTipo ID meteVariable TO_COMA . decParametros
    (13) decParametros -> . decTipo ID meteVariable
    (14) decParametros -> . decTipo ID meteVariable TO_COMA decParametros
    (35) decTipo -> . PR_int tipoVar
    (36) decTipo -> . PR_float tipoVar
    (37) decTipo -> . PR_bool tipoVar
    (38) decTipo -> . PR_void tipoVar

    PR_int          shift and go to state 24
    PR_float        shift and go to state 25
    PR_bool         shift and go to state 26
    PR_void         shift and go to state 27

    decTipo                        shift and go to state 81
    decParametros                  shift and go to state 207

state 177

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque . TO_BRACKCLO endProcCuad

    TO_BRACKCLO     shift and go to state 208


state 178

    (31) funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO . whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (109) whileCuadP2 -> .

    TO_BRACKOP      reduce using rule 109 (whileCuadP2 -> .)

    whileCuadP2                    shift and go to state 209

state 179

    (78) decSolucion -> TO_PAROP pushPilaOp defExpresiones . TO_PARCLO pushPilaOp

    TO_PARCLO       shift and go to state 210


state 180

    (32) funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 . TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3

    TO_BRACKOP      shift and go to state 211


state 181

    (53) defExpresiones -> decExpresion PR_and pushPilaOp . defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    decExpresion                   shift and go to state 113
    defExpresiones                 shift and go to state 212
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 182

    (54) defExpresiones -> decExpresion PR_or pushPilaOp . defExpresiones agregaAndCuad
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    decExpresion                   shift and go to state 113
    defExpresiones                 shift and go to state 213
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 183

    (56) decExpresion -> miniExp OP_EQUALTO pushPilaOp . miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    miniExp                        shift and go to state 214
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 184

    (57) decExpresion -> miniExp OP_DIFF pushPilaOp . miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    miniExp                        shift and go to state 215
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 185

    (58) decExpresion -> miniExp OP_LESST pushPilaOp . miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    miniExp                        shift and go to state 216
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 186

    (59) decExpresion -> miniExp OP_LESSTEQ pushPilaOp . miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    miniExp                        shift and go to state 217
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 187

    (60) decExpresion -> miniExp OP_GREATT pushPilaOp . miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    miniExp                        shift and go to state 218
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 188

    (61) decExpresion -> miniExp OP_GREATTEQ pushPilaOp . miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    miniExp                        shift and go to state 219
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 189

    (63) miniExp -> microExp OP_SUBS pushPilaOp . miniExp agregaSumResCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    microExp                       shift and go to state 115
    miniExp                        shift and go to state 220
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 190

    (64) miniExp -> microExp OP_ADD pushPilaOp . miniExp agregaSumResCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    microExp                       shift and go to state 115
    miniExp                        shift and go to state 221
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 191

    (66) microExp -> micromicroExp OP_MULT pushPilaOp . microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    micromicroExp                  shift and go to state 116
    microExp                       shift and go to state 222
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 192

    (67) microExp -> micromicroExp OP_DIV pushPilaOp . microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    micromicroExp                  shift and go to state 116
    microExp                       shift and go to state 223
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 193

    (68) microExp -> micromicroExp OP_MOD pushPilaOp . microExp agregaMultDivCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    micromicroExp                  shift and go to state 116
    microExp                       shift and go to state 224
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 194

    (70) micromicroExp -> decSolucion OP_POW pushPilaOp . micromicroExp agregaPowCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    decSolucion                    shift and go to state 117
    micromicroExp                  shift and go to state 225
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 195

    (72) decSolucion -> ID TO_CBRACKOP defExpresiones . TO_CBRACKCLO cuadArrPush

    TO_CBRACKCLO    shift and go to state 226


state 196

    (86) decParamFuncs -> ID paramCuadruplo .
    (87) decParamFuncs -> ID paramCuadruplo . TO_COMA decParamFuncs

    TO_PARCLO       reduce using rule 86 (decParamFuncs -> ID paramCuadruplo .)
    TO_COMA         shift and go to state 227


state 197

    (79) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO . TO_PuntoComa goSubCuadruplo

    TO_PuntoComa    shift and go to state 228


state 198

    (28) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones . TO_PuntoComa extraNeed agregaIgualCuad

    TO_PuntoComa    shift and go to state 229


state 199

    (29) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS . defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (52) defExpresiones -> . decExpresion
    (53) defExpresiones -> . decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad
    (54) defExpresiones -> . decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad
    (55) decExpresion -> . miniExp
    (56) decExpresion -> . miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad
    (57) decExpresion -> . miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad
    (58) decExpresion -> . miniExp OP_LESST pushPilaOp miniExp agregaComparCuad
    (59) decExpresion -> . miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad
    (60) decExpresion -> . miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad
    (61) decExpresion -> . miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad
    (62) miniExp -> . microExp
    (63) miniExp -> . microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad
    (64) miniExp -> . microExp OP_ADD pushPilaOp miniExp agregaSumResCuad
    (65) microExp -> . micromicroExp
    (66) microExp -> . micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad
    (67) microExp -> . micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad
    (68) microExp -> . micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad
    (69) micromicroExp -> . decSolucion
    (70) micromicroExp -> . decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad
    (71) decSolucion -> . ID pushPilaVar
    (72) decSolucion -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush
    (73) decSolucion -> . TO_INT agregaIntCuad
    (74) decSolucion -> . TO_FLOAT agregaFloatCuad
    (75) decSolucion -> . PR_true agregaBoolCuad
    (76) decSolucion -> . PR_false agregaBoolCuad
    (77) decSolucion -> . llamadaDeFunciones
    (78) decSolucion -> . TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad
    (118) empty -> .

    ID              shift and go to state 118
    TO_INT          shift and go to state 119
    TO_FLOAT        shift and go to state 120
    PR_true         shift and go to state 121
    PR_false        shift and go to state 122
    TO_PAROP        shift and go to state 111
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80
    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    defExpresiones                 shift and go to state 230
    decExpresion                   shift and go to state 113
    miniExp                        shift and go to state 114
    microExp                       shift and go to state 115
    micromicroExp                  shift and go to state 116
    decSolucion                    shift and go to state 117
    llamadaDeFunciones             shift and go to state 123
    funcionesDibuja                shift and go to state 73
    empty                          shift and go to state 124

state 200

    (25) funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO . TO_PuntoComa

    TO_PuntoComa    shift and go to state 231


state 201

    (26) funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO . TO_PuntoComa

    TO_PuntoComa    shift and go to state 232


state 202

    (27) funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO . TO_PuntoComa

    TO_PuntoComa    shift and go to state 233


state 203

    (82) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID . TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad

    TO_COMA         shift and go to state 234


state 204

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID . TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad

    TO_COMA         shift and go to state 235


state 205

    (84) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID . TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad

    TO_COMA         shift and go to state 236


state 206

    (85) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID . TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

    TO_COMA         shift and go to state 237


state 207

    (14) decParametros -> decTipo ID meteVariable TO_COMA decParametros .

    TO_PARCLO       reduce using rule 14 (decParametros -> decTipo ID meteVariable TO_COMA decParametros .)


state 208

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO . endProcCuad
    (12) endProcCuad -> .

    PR_function     reduce using rule 12 (endProcCuad -> .)
    PR_main         reduce using rule 12 (endProcCuad -> .)

    endProcCuad                    shift and go to state 238

state 209

    (31) funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 . TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3

    TO_BRACKOP      shift and go to state 239


state 210

    (78) decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO . pushPilaOp
    (89) pushPilaOp -> . empty
    (118) empty -> .

    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    pushPilaOp                     shift and go to state 240
    empty                          shift and go to state 139

state 211

    (32) funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP . mainBloque TO_BRACKCLO else agregaIfCuadP3
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    mainBloque                     shift and go to state 241
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 212

    (53) defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones . agregaAndCuad
    (95) agregaAndCuad -> .

    TO_PARCLO       reduce using rule 95 (agregaAndCuad -> .)
    TO_CBRACKCLO    reduce using rule 95 (agregaAndCuad -> .)
    TO_PuntoComa    reduce using rule 95 (agregaAndCuad -> .)

    agregaAndCuad                  shift and go to state 242

state 213

    (54) defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones . agregaAndCuad
    (95) agregaAndCuad -> .

    TO_PARCLO       reduce using rule 95 (agregaAndCuad -> .)
    TO_CBRACKCLO    reduce using rule 95 (agregaAndCuad -> .)
    TO_PuntoComa    reduce using rule 95 (agregaAndCuad -> .)

    agregaAndCuad                  shift and go to state 243

state 214

    (56) decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp . agregaComparCuad
    (96) agregaComparCuad -> .

    PR_and          reduce using rule 96 (agregaComparCuad -> .)
    PR_or           reduce using rule 96 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 244

state 215

    (57) decExpresion -> miniExp OP_DIFF pushPilaOp miniExp . agregaComparCuad
    (96) agregaComparCuad -> .

    PR_and          reduce using rule 96 (agregaComparCuad -> .)
    PR_or           reduce using rule 96 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 245

state 216

    (58) decExpresion -> miniExp OP_LESST pushPilaOp miniExp . agregaComparCuad
    (96) agregaComparCuad -> .

    PR_and          reduce using rule 96 (agregaComparCuad -> .)
    PR_or           reduce using rule 96 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 246

state 217

    (59) decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp . agregaComparCuad
    (96) agregaComparCuad -> .

    PR_and          reduce using rule 96 (agregaComparCuad -> .)
    PR_or           reduce using rule 96 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 247

state 218

    (60) decExpresion -> miniExp OP_GREATT pushPilaOp miniExp . agregaComparCuad
    (96) agregaComparCuad -> .

    PR_and          reduce using rule 96 (agregaComparCuad -> .)
    PR_or           reduce using rule 96 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 248

state 219

    (61) decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp . agregaComparCuad
    (96) agregaComparCuad -> .

    PR_and          reduce using rule 96 (agregaComparCuad -> .)
    PR_or           reduce using rule 96 (agregaComparCuad -> .)
    TO_PARCLO       reduce using rule 96 (agregaComparCuad -> .)
    TO_CBRACKCLO    reduce using rule 96 (agregaComparCuad -> .)
    TO_PuntoComa    reduce using rule 96 (agregaComparCuad -> .)

    agregaComparCuad               shift and go to state 249

state 220

    (63) miniExp -> microExp OP_SUBS pushPilaOp miniExp . agregaSumResCuad
    (97) agregaSumResCuad -> .

    OP_EQUALTO      reduce using rule 97 (agregaSumResCuad -> .)
    OP_DIFF         reduce using rule 97 (agregaSumResCuad -> .)
    OP_LESST        reduce using rule 97 (agregaSumResCuad -> .)
    OP_LESSTEQ      reduce using rule 97 (agregaSumResCuad -> .)
    OP_GREATT       reduce using rule 97 (agregaSumResCuad -> .)
    OP_GREATTEQ     reduce using rule 97 (agregaSumResCuad -> .)
    PR_and          reduce using rule 97 (agregaSumResCuad -> .)
    PR_or           reduce using rule 97 (agregaSumResCuad -> .)
    TO_PARCLO       reduce using rule 97 (agregaSumResCuad -> .)
    TO_CBRACKCLO    reduce using rule 97 (agregaSumResCuad -> .)
    TO_PuntoComa    reduce using rule 97 (agregaSumResCuad -> .)

    agregaSumResCuad               shift and go to state 250

state 221

    (64) miniExp -> microExp OP_ADD pushPilaOp miniExp . agregaSumResCuad
    (97) agregaSumResCuad -> .

    OP_EQUALTO      reduce using rule 97 (agregaSumResCuad -> .)
    OP_DIFF         reduce using rule 97 (agregaSumResCuad -> .)
    OP_LESST        reduce using rule 97 (agregaSumResCuad -> .)
    OP_LESSTEQ      reduce using rule 97 (agregaSumResCuad -> .)
    OP_GREATT       reduce using rule 97 (agregaSumResCuad -> .)
    OP_GREATTEQ     reduce using rule 97 (agregaSumResCuad -> .)
    PR_and          reduce using rule 97 (agregaSumResCuad -> .)
    PR_or           reduce using rule 97 (agregaSumResCuad -> .)
    TO_PARCLO       reduce using rule 97 (agregaSumResCuad -> .)
    TO_CBRACKCLO    reduce using rule 97 (agregaSumResCuad -> .)
    TO_PuntoComa    reduce using rule 97 (agregaSumResCuad -> .)

    agregaSumResCuad               shift and go to state 251

state 222

    (66) microExp -> micromicroExp OP_MULT pushPilaOp microExp . agregaMultDivCuad
    (98) agregaMultDivCuad -> .

    OP_SUBS         reduce using rule 98 (agregaMultDivCuad -> .)
    OP_ADD          reduce using rule 98 (agregaMultDivCuad -> .)
    OP_EQUALTO      reduce using rule 98 (agregaMultDivCuad -> .)
    OP_DIFF         reduce using rule 98 (agregaMultDivCuad -> .)
    OP_LESST        reduce using rule 98 (agregaMultDivCuad -> .)
    OP_LESSTEQ      reduce using rule 98 (agregaMultDivCuad -> .)
    OP_GREATT       reduce using rule 98 (agregaMultDivCuad -> .)
    OP_GREATTEQ     reduce using rule 98 (agregaMultDivCuad -> .)
    PR_and          reduce using rule 98 (agregaMultDivCuad -> .)
    PR_or           reduce using rule 98 (agregaMultDivCuad -> .)
    TO_PARCLO       reduce using rule 98 (agregaMultDivCuad -> .)
    TO_CBRACKCLO    reduce using rule 98 (agregaMultDivCuad -> .)
    TO_PuntoComa    reduce using rule 98 (agregaMultDivCuad -> .)

    agregaMultDivCuad              shift and go to state 252

state 223

    (67) microExp -> micromicroExp OP_DIV pushPilaOp microExp . agregaMultDivCuad
    (98) agregaMultDivCuad -> .

    OP_SUBS         reduce using rule 98 (agregaMultDivCuad -> .)
    OP_ADD          reduce using rule 98 (agregaMultDivCuad -> .)
    OP_EQUALTO      reduce using rule 98 (agregaMultDivCuad -> .)
    OP_DIFF         reduce using rule 98 (agregaMultDivCuad -> .)
    OP_LESST        reduce using rule 98 (agregaMultDivCuad -> .)
    OP_LESSTEQ      reduce using rule 98 (agregaMultDivCuad -> .)
    OP_GREATT       reduce using rule 98 (agregaMultDivCuad -> .)
    OP_GREATTEQ     reduce using rule 98 (agregaMultDivCuad -> .)
    PR_and          reduce using rule 98 (agregaMultDivCuad -> .)
    PR_or           reduce using rule 98 (agregaMultDivCuad -> .)
    TO_PARCLO       reduce using rule 98 (agregaMultDivCuad -> .)
    TO_CBRACKCLO    reduce using rule 98 (agregaMultDivCuad -> .)
    TO_PuntoComa    reduce using rule 98 (agregaMultDivCuad -> .)

    agregaMultDivCuad              shift and go to state 253

state 224

    (68) microExp -> micromicroExp OP_MOD pushPilaOp microExp . agregaMultDivCuad
    (98) agregaMultDivCuad -> .

    OP_SUBS         reduce using rule 98 (agregaMultDivCuad -> .)
    OP_ADD          reduce using rule 98 (agregaMultDivCuad -> .)
    OP_EQUALTO      reduce using rule 98 (agregaMultDivCuad -> .)
    OP_DIFF         reduce using rule 98 (agregaMultDivCuad -> .)
    OP_LESST        reduce using rule 98 (agregaMultDivCuad -> .)
    OP_LESSTEQ      reduce using rule 98 (agregaMultDivCuad -> .)
    OP_GREATT       reduce using rule 98 (agregaMultDivCuad -> .)
    OP_GREATTEQ     reduce using rule 98 (agregaMultDivCuad -> .)
    PR_and          reduce using rule 98 (agregaMultDivCuad -> .)
    PR_or           reduce using rule 98 (agregaMultDivCuad -> .)
    TO_PARCLO       reduce using rule 98 (agregaMultDivCuad -> .)
    TO_CBRACKCLO    reduce using rule 98 (agregaMultDivCuad -> .)
    TO_PuntoComa    reduce using rule 98 (agregaMultDivCuad -> .)

    agregaMultDivCuad              shift and go to state 254

state 225

    (70) micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp . agregaPowCuad
    (99) agregaPowCuad -> .

    OP_MULT         reduce using rule 99 (agregaPowCuad -> .)
    OP_DIV          reduce using rule 99 (agregaPowCuad -> .)
    OP_MOD          reduce using rule 99 (agregaPowCuad -> .)
    OP_SUBS         reduce using rule 99 (agregaPowCuad -> .)
    OP_ADD          reduce using rule 99 (agregaPowCuad -> .)
    OP_EQUALTO      reduce using rule 99 (agregaPowCuad -> .)
    OP_DIFF         reduce using rule 99 (agregaPowCuad -> .)
    OP_LESST        reduce using rule 99 (agregaPowCuad -> .)
    OP_LESSTEQ      reduce using rule 99 (agregaPowCuad -> .)
    OP_GREATT       reduce using rule 99 (agregaPowCuad -> .)
    OP_GREATTEQ     reduce using rule 99 (agregaPowCuad -> .)
    PR_and          reduce using rule 99 (agregaPowCuad -> .)
    PR_or           reduce using rule 99 (agregaPowCuad -> .)
    TO_PARCLO       reduce using rule 99 (agregaPowCuad -> .)
    TO_CBRACKCLO    reduce using rule 99 (agregaPowCuad -> .)
    TO_PuntoComa    reduce using rule 99 (agregaPowCuad -> .)

    agregaPowCuad                  shift and go to state 255

state 226

    (72) decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO . cuadArrPush
    (94) cuadArrPush -> . empty
    (118) empty -> .

    OP_POW          reduce using rule 118 (empty -> .)
    OP_MULT         reduce using rule 118 (empty -> .)
    OP_DIV          reduce using rule 118 (empty -> .)
    OP_MOD          reduce using rule 118 (empty -> .)
    OP_SUBS         reduce using rule 118 (empty -> .)
    OP_ADD          reduce using rule 118 (empty -> .)
    OP_EQUALTO      reduce using rule 118 (empty -> .)
    OP_DIFF         reduce using rule 118 (empty -> .)
    OP_LESST        reduce using rule 118 (empty -> .)
    OP_LESSTEQ      reduce using rule 118 (empty -> .)
    OP_GREATT       reduce using rule 118 (empty -> .)
    OP_GREATTEQ     reduce using rule 118 (empty -> .)
    PR_and          reduce using rule 118 (empty -> .)
    PR_or           reduce using rule 118 (empty -> .)
    TO_PARCLO       reduce using rule 118 (empty -> .)
    TO_CBRACKCLO    reduce using rule 118 (empty -> .)
    TO_PuntoComa    reduce using rule 118 (empty -> .)

    cuadArrPush                    shift and go to state 256
    empty                          shift and go to state 257

state 227

    (87) decParamFuncs -> ID paramCuadruplo TO_COMA . decParamFuncs
    (86) decParamFuncs -> . ID paramCuadruplo
    (87) decParamFuncs -> . ID paramCuadruplo TO_COMA decParamFuncs
    (88) decParamFuncs -> . empty
    (118) empty -> .

    ID              shift and go to state 164
    TO_PARCLO       reduce using rule 118 (empty -> .)

    decParamFuncs                  shift and go to state 258
    empty                          shift and go to state 166

state 228

    (79) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa . goSubCuadruplo
    (113) goSubCuadruplo -> .

    PR_While        reduce using rule 113 (goSubCuadruplo -> .)
    PR_if           reduce using rule 113 (goSubCuadruplo -> .)
    PR_int          reduce using rule 113 (goSubCuadruplo -> .)
    PR_float        reduce using rule 113 (goSubCuadruplo -> .)
    PR_bool         reduce using rule 113 (goSubCuadruplo -> .)
    PR_void         reduce using rule 113 (goSubCuadruplo -> .)
    ID              reduce using rule 113 (goSubCuadruplo -> .)
    PR_write        reduce using rule 113 (goSubCuadruplo -> .)
    PR_read         reduce using rule 113 (goSubCuadruplo -> .)
    PR_return       reduce using rule 113 (goSubCuadruplo -> .)
    PR_circulo      reduce using rule 113 (goSubCuadruplo -> .)
    PR_rectangulo   reduce using rule 113 (goSubCuadruplo -> .)
    PR_espiral      reduce using rule 113 (goSubCuadruplo -> .)
    PR_estrella     reduce using rule 113 (goSubCuadruplo -> .)
    TO_BRACKCLO     reduce using rule 113 (goSubCuadruplo -> .)
    OP_POW          reduce using rule 113 (goSubCuadruplo -> .)
    OP_MULT         reduce using rule 113 (goSubCuadruplo -> .)
    OP_DIV          reduce using rule 113 (goSubCuadruplo -> .)
    OP_MOD          reduce using rule 113 (goSubCuadruplo -> .)
    OP_SUBS         reduce using rule 113 (goSubCuadruplo -> .)
    OP_ADD          reduce using rule 113 (goSubCuadruplo -> .)
    OP_EQUALTO      reduce using rule 113 (goSubCuadruplo -> .)
    OP_DIFF         reduce using rule 113 (goSubCuadruplo -> .)
    OP_LESST        reduce using rule 113 (goSubCuadruplo -> .)
    OP_LESSTEQ      reduce using rule 113 (goSubCuadruplo -> .)
    OP_GREATT       reduce using rule 113 (goSubCuadruplo -> .)
    OP_GREATTEQ     reduce using rule 113 (goSubCuadruplo -> .)
    PR_and          reduce using rule 113 (goSubCuadruplo -> .)
    PR_or           reduce using rule 113 (goSubCuadruplo -> .)
    TO_PARCLO       reduce using rule 113 (goSubCuadruplo -> .)
    TO_CBRACKCLO    reduce using rule 113 (goSubCuadruplo -> .)
    TO_PuntoComa    reduce using rule 113 (goSubCuadruplo -> .)

    goSubCuadruplo                 shift and go to state 259

state 229

    (28) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa . extraNeed agregaIgualCuad
    (30) extraNeed -> . empty
    (118) empty -> .

    PR_While        reduce using rule 118 (empty -> .)
    PR_if           reduce using rule 118 (empty -> .)
    PR_int          reduce using rule 118 (empty -> .)
    PR_float        reduce using rule 118 (empty -> .)
    PR_bool         reduce using rule 118 (empty -> .)
    PR_void         reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    PR_write        reduce using rule 118 (empty -> .)
    PR_read         reduce using rule 118 (empty -> .)
    PR_return       reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    TO_BRACKCLO     reduce using rule 118 (empty -> .)

    extraNeed                      shift and go to state 260
    empty                          shift and go to state 261

state 230

    (29) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones . cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (101) cuadruploAsignaArr -> . empty
    (118) empty -> .

    TO_PuntoComa    reduce using rule 118 (empty -> .)

    cuadruploAsignaArr             shift and go to state 262
    empty                          shift and go to state 263

state 231

    (25) funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .

    PR_While        reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_if           reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_int          reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_float        reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_bool         reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_void         reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    ID              reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_write        reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_read         reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_return       reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_circulo      reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_rectangulo   reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_espiral      reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    PR_estrella     reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 25 (funcWrite -> PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa .)


state 232

    (26) funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .

    PR_While        reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_if           reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_int          reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_float        reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_bool         reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_void         reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    ID              reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_write        reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_read         reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_return       reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_circulo      reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_rectangulo   reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_espiral      reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    PR_estrella     reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 26 (funcRead -> PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa .)


state 233

    (27) funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .

    PR_While        reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_if           reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_int          reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_float        reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_bool         reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_void         reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    ID              reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_write        reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_read         reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_return       reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_circulo      reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_rectangulo   reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_espiral      reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    PR_estrella     reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)
    TO_BRACKCLO     reduce using rule 27 (funcReturn -> PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa .)


state 234

    (82) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA . ID TO_PARCLO TO_PuntoComa circuloCuad

    ID              shift and go to state 264


state 235

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA . ID TO_PARCLO TO_PuntoComa rectanguloCuad

    ID              shift and go to state 265


state 236

    (84) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA . ID TO_PARCLO TO_PuntoComa espiralCuad

    ID              shift and go to state 266


state 237

    (85) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA . ID TO_PARCLO TO_PuntoComa estrellaCuad

    ID              shift and go to state 267


state 238

    (10) defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad .

    PR_function     reduce using rule 10 (defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad .)
    PR_main         reduce using rule 10 (defFuncion -> decTipo ID agregaFuncion TO_PAROP decParametros TO_PARCLO TO_BRACKOP mainBloque TO_BRACKCLO endProcCuad .)


state 239

    (31) funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP . mainBloque TO_BRACKCLO whileCuadP3
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    mainBloque                     shift and go to state 268
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 240

    (78) decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .

    OP_POW          reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_MULT         reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_DIV          reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_MOD          reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_SUBS         reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_ADD          reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_EQUALTO      reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_DIFF         reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_LESST        reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_LESSTEQ      reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_GREATT       reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    OP_GREATTEQ     reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    PR_and          reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    PR_or           reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    TO_PARCLO       reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    TO_CBRACKCLO    reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)
    TO_PuntoComa    reduce using rule 78 (decSolucion -> TO_PAROP pushPilaOp defExpresiones TO_PARCLO pushPilaOp .)


state 241

    (32) funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque . TO_BRACKCLO else agregaIfCuadP3

    TO_BRACKCLO     shift and go to state 269


state 242

    (53) defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad .

    TO_PARCLO       reduce using rule 53 (defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad .)
    TO_CBRACKCLO    reduce using rule 53 (defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad .)
    TO_PuntoComa    reduce using rule 53 (defExpresiones -> decExpresion PR_and pushPilaOp defExpresiones agregaAndCuad .)


state 243

    (54) defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad .

    TO_PARCLO       reduce using rule 54 (defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad .)
    TO_CBRACKCLO    reduce using rule 54 (defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad .)
    TO_PuntoComa    reduce using rule 54 (defExpresiones -> decExpresion PR_or pushPilaOp defExpresiones agregaAndCuad .)


state 244

    (56) decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 56 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 56 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 56 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 56 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 56 (decExpresion -> miniExp OP_EQUALTO pushPilaOp miniExp agregaComparCuad .)


state 245

    (57) decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 57 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 57 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 57 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 57 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 57 (decExpresion -> miniExp OP_DIFF pushPilaOp miniExp agregaComparCuad .)


state 246

    (58) decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 58 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 58 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 58 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 58 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 58 (decExpresion -> miniExp OP_LESST pushPilaOp miniExp agregaComparCuad .)


state 247

    (59) decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 59 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 59 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 59 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 59 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 59 (decExpresion -> miniExp OP_LESSTEQ pushPilaOp miniExp agregaComparCuad .)


state 248

    (60) decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 60 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 60 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 60 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 60 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 60 (decExpresion -> miniExp OP_GREATT pushPilaOp miniExp agregaComparCuad .)


state 249

    (61) decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .

    PR_and          reduce using rule 61 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)
    PR_or           reduce using rule 61 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_PARCLO       reduce using rule 61 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_CBRACKCLO    reduce using rule 61 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)
    TO_PuntoComa    reduce using rule 61 (decExpresion -> miniExp OP_GREATTEQ pushPilaOp miniExp agregaComparCuad .)


state 250

    (63) miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .

    OP_EQUALTO      reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_DIFF         reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_LESST        reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_LESSTEQ      reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_GREATT       reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    OP_GREATTEQ     reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    PR_and          reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    PR_or           reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    TO_PARCLO       reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    TO_CBRACKCLO    reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)
    TO_PuntoComa    reduce using rule 63 (miniExp -> microExp OP_SUBS pushPilaOp miniExp agregaSumResCuad .)


state 251

    (64) miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .

    OP_EQUALTO      reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_DIFF         reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_LESST        reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_LESSTEQ      reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_GREATT       reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    OP_GREATTEQ     reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    PR_and          reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    PR_or           reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    TO_PARCLO       reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    TO_CBRACKCLO    reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)
    TO_PuntoComa    reduce using rule 64 (miniExp -> microExp OP_ADD pushPilaOp miniExp agregaSumResCuad .)


state 252

    (66) microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .

    OP_SUBS         reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_ADD          reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_EQUALTO      reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_DIFF         reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_LESST        reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_LESSTEQ      reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATT       reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATTEQ     reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    PR_and          reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    PR_or           reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    TO_PARCLO       reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    TO_CBRACKCLO    reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)
    TO_PuntoComa    reduce using rule 66 (microExp -> micromicroExp OP_MULT pushPilaOp microExp agregaMultDivCuad .)


state 253

    (67) microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .

    OP_SUBS         reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_ADD          reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_EQUALTO      reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_DIFF         reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_LESST        reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_LESSTEQ      reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATT       reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATTEQ     reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    PR_and          reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    PR_or           reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    TO_PARCLO       reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    TO_CBRACKCLO    reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)
    TO_PuntoComa    reduce using rule 67 (microExp -> micromicroExp OP_DIV pushPilaOp microExp agregaMultDivCuad .)


state 254

    (68) microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .

    OP_SUBS         reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_ADD          reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_EQUALTO      reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_DIFF         reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_LESST        reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_LESSTEQ      reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATT       reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    OP_GREATTEQ     reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    PR_and          reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    PR_or           reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    TO_PARCLO       reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    TO_CBRACKCLO    reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)
    TO_PuntoComa    reduce using rule 68 (microExp -> micromicroExp OP_MOD pushPilaOp microExp agregaMultDivCuad .)


state 255

    (70) micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .

    OP_MULT         reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_DIV          reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_MOD          reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_SUBS         reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_ADD          reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_EQUALTO      reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_DIFF         reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_LESST        reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_LESSTEQ      reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_GREATT       reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    OP_GREATTEQ     reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    PR_and          reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    PR_or           reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    TO_PARCLO       reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    TO_CBRACKCLO    reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)
    TO_PuntoComa    reduce using rule 70 (micromicroExp -> decSolucion OP_POW pushPilaOp micromicroExp agregaPowCuad .)


state 256

    (72) decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .

    OP_POW          reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_MULT         reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_DIV          reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_MOD          reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_SUBS         reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_ADD          reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_EQUALTO      reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_DIFF         reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_LESST        reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_LESSTEQ      reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_GREATT       reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    OP_GREATTEQ     reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    PR_and          reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    PR_or           reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    TO_PARCLO       reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    TO_CBRACKCLO    reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)
    TO_PuntoComa    reduce using rule 72 (decSolucion -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO cuadArrPush .)


state 257

    (94) cuadArrPush -> empty .

    OP_POW          reduce using rule 94 (cuadArrPush -> empty .)
    OP_MULT         reduce using rule 94 (cuadArrPush -> empty .)
    OP_DIV          reduce using rule 94 (cuadArrPush -> empty .)
    OP_MOD          reduce using rule 94 (cuadArrPush -> empty .)
    OP_SUBS         reduce using rule 94 (cuadArrPush -> empty .)
    OP_ADD          reduce using rule 94 (cuadArrPush -> empty .)
    OP_EQUALTO      reduce using rule 94 (cuadArrPush -> empty .)
    OP_DIFF         reduce using rule 94 (cuadArrPush -> empty .)
    OP_LESST        reduce using rule 94 (cuadArrPush -> empty .)
    OP_LESSTEQ      reduce using rule 94 (cuadArrPush -> empty .)
    OP_GREATT       reduce using rule 94 (cuadArrPush -> empty .)
    OP_GREATTEQ     reduce using rule 94 (cuadArrPush -> empty .)
    PR_and          reduce using rule 94 (cuadArrPush -> empty .)
    PR_or           reduce using rule 94 (cuadArrPush -> empty .)
    TO_PARCLO       reduce using rule 94 (cuadArrPush -> empty .)
    TO_CBRACKCLO    reduce using rule 94 (cuadArrPush -> empty .)
    TO_PuntoComa    reduce using rule 94 (cuadArrPush -> empty .)


state 258

    (87) decParamFuncs -> ID paramCuadruplo TO_COMA decParamFuncs .

    TO_PARCLO       reduce using rule 87 (decParamFuncs -> ID paramCuadruplo TO_COMA decParamFuncs .)


state 259

    (79) llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .

    PR_While        reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_if           reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_int          reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_float        reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_bool         reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_void         reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    ID              reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_write        reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_read         reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_return       reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_circulo      reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_rectangulo   reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_espiral      reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_estrella     reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    TO_BRACKCLO     reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_POW          reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_MULT         reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_DIV          reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_MOD          reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_SUBS         reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_ADD          reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_EQUALTO      reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_DIFF         reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_LESST        reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_LESSTEQ      reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_GREATT       reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    OP_GREATTEQ     reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_and          reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    PR_or           reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    TO_PARCLO       reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    TO_CBRACKCLO    reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)
    TO_PuntoComa    reduce using rule 79 (llamadaDeFunciones -> ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo .)


state 260

    (28) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed . agregaIgualCuad
    (100) agregaIgualCuad -> .

    PR_While        reduce using rule 100 (agregaIgualCuad -> .)
    PR_if           reduce using rule 100 (agregaIgualCuad -> .)
    PR_int          reduce using rule 100 (agregaIgualCuad -> .)
    PR_float        reduce using rule 100 (agregaIgualCuad -> .)
    PR_bool         reduce using rule 100 (agregaIgualCuad -> .)
    PR_void         reduce using rule 100 (agregaIgualCuad -> .)
    ID              reduce using rule 100 (agregaIgualCuad -> .)
    PR_write        reduce using rule 100 (agregaIgualCuad -> .)
    PR_read         reduce using rule 100 (agregaIgualCuad -> .)
    PR_return       reduce using rule 100 (agregaIgualCuad -> .)
    PR_circulo      reduce using rule 100 (agregaIgualCuad -> .)
    PR_rectangulo   reduce using rule 100 (agregaIgualCuad -> .)
    PR_espiral      reduce using rule 100 (agregaIgualCuad -> .)
    PR_estrella     reduce using rule 100 (agregaIgualCuad -> .)
    TO_BRACKCLO     reduce using rule 100 (agregaIgualCuad -> .)

    agregaIgualCuad                shift and go to state 270

state 261

    (30) extraNeed -> empty .

    PR_While        reduce using rule 30 (extraNeed -> empty .)
    PR_if           reduce using rule 30 (extraNeed -> empty .)
    PR_int          reduce using rule 30 (extraNeed -> empty .)
    PR_float        reduce using rule 30 (extraNeed -> empty .)
    PR_bool         reduce using rule 30 (extraNeed -> empty .)
    PR_void         reduce using rule 30 (extraNeed -> empty .)
    ID              reduce using rule 30 (extraNeed -> empty .)
    PR_write        reduce using rule 30 (extraNeed -> empty .)
    PR_read         reduce using rule 30 (extraNeed -> empty .)
    PR_return       reduce using rule 30 (extraNeed -> empty .)
    PR_circulo      reduce using rule 30 (extraNeed -> empty .)
    PR_rectangulo   reduce using rule 30 (extraNeed -> empty .)
    PR_espiral      reduce using rule 30 (extraNeed -> empty .)
    PR_estrella     reduce using rule 30 (extraNeed -> empty .)
    TO_BRACKCLO     reduce using rule 30 (extraNeed -> empty .)


state 262

    (29) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr . TO_PuntoComa agregaIgualCuad

    TO_PuntoComa    shift and go to state 271


state 263

    (101) cuadruploAsignaArr -> empty .

    TO_PuntoComa    reduce using rule 101 (cuadruploAsignaArr -> empty .)


state 264

    (82) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID . TO_PARCLO TO_PuntoComa circuloCuad

    TO_PARCLO       shift and go to state 272


state 265

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID . TO_PARCLO TO_PuntoComa rectanguloCuad

    TO_PARCLO       shift and go to state 273


state 266

    (84) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID . TO_PARCLO TO_PuntoComa espiralCuad

    TO_PARCLO       shift and go to state 274


state 267

    (85) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID . TO_PARCLO TO_PuntoComa estrellaCuad

    TO_PARCLO       shift and go to state 275


state 268

    (31) funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque . TO_BRACKCLO whileCuadP3

    TO_BRACKCLO     shift and go to state 276


state 269

    (32) funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO . else agregaIfCuadP3
    (33) else -> . agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO
    (34) else -> . empty
    (106) agregaIfCuadP2 -> .
    (118) empty -> .

    PR_else         reduce using rule 106 (agregaIfCuadP2 -> .)
    PR_While        reduce using rule 118 (empty -> .)
    PR_if           reduce using rule 118 (empty -> .)
    PR_int          reduce using rule 118 (empty -> .)
    PR_float        reduce using rule 118 (empty -> .)
    PR_bool         reduce using rule 118 (empty -> .)
    PR_void         reduce using rule 118 (empty -> .)
    ID              reduce using rule 118 (empty -> .)
    PR_write        reduce using rule 118 (empty -> .)
    PR_read         reduce using rule 118 (empty -> .)
    PR_return       reduce using rule 118 (empty -> .)
    PR_circulo      reduce using rule 118 (empty -> .)
    PR_rectangulo   reduce using rule 118 (empty -> .)
    PR_espiral      reduce using rule 118 (empty -> .)
    PR_estrella     reduce using rule 118 (empty -> .)
    TO_BRACKCLO     reduce using rule 118 (empty -> .)

    else                           shift and go to state 277
    agregaIfCuadP2                 shift and go to state 278
    empty                          shift and go to state 279

state 270

    (28) funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .

    PR_While        reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_if           reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_int          reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_float        reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_bool         reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_void         reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    ID              reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_write        reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_read         reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_return       reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_circulo      reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_rectangulo   reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_espiral      reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    PR_estrella     reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)
    TO_BRACKCLO     reduce using rule 28 (funcIgual -> ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad .)


state 271

    (29) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa . agregaIgualCuad
    (100) agregaIgualCuad -> .

    PR_While        reduce using rule 100 (agregaIgualCuad -> .)
    PR_if           reduce using rule 100 (agregaIgualCuad -> .)
    PR_int          reduce using rule 100 (agregaIgualCuad -> .)
    PR_float        reduce using rule 100 (agregaIgualCuad -> .)
    PR_bool         reduce using rule 100 (agregaIgualCuad -> .)
    PR_void         reduce using rule 100 (agregaIgualCuad -> .)
    ID              reduce using rule 100 (agregaIgualCuad -> .)
    PR_write        reduce using rule 100 (agregaIgualCuad -> .)
    PR_read         reduce using rule 100 (agregaIgualCuad -> .)
    PR_return       reduce using rule 100 (agregaIgualCuad -> .)
    PR_circulo      reduce using rule 100 (agregaIgualCuad -> .)
    PR_rectangulo   reduce using rule 100 (agregaIgualCuad -> .)
    PR_espiral      reduce using rule 100 (agregaIgualCuad -> .)
    PR_estrella     reduce using rule 100 (agregaIgualCuad -> .)
    TO_BRACKCLO     reduce using rule 100 (agregaIgualCuad -> .)

    agregaIgualCuad                shift and go to state 280

state 272

    (82) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO . TO_PuntoComa circuloCuad

    TO_PuntoComa    shift and go to state 281


state 273

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO . TO_PuntoComa rectanguloCuad

    TO_PuntoComa    shift and go to state 282


state 274

    (84) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO . TO_PuntoComa espiralCuad

    TO_PuntoComa    shift and go to state 283


state 275

    (85) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO . TO_PuntoComa estrellaCuad

    TO_PuntoComa    shift and go to state 284


state 276

    (31) funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO . whileCuadP3
    (110) whileCuadP3 -> .

    PR_While        reduce using rule 110 (whileCuadP3 -> .)
    PR_if           reduce using rule 110 (whileCuadP3 -> .)
    PR_int          reduce using rule 110 (whileCuadP3 -> .)
    PR_float        reduce using rule 110 (whileCuadP3 -> .)
    PR_bool         reduce using rule 110 (whileCuadP3 -> .)
    PR_void         reduce using rule 110 (whileCuadP3 -> .)
    ID              reduce using rule 110 (whileCuadP3 -> .)
    PR_write        reduce using rule 110 (whileCuadP3 -> .)
    PR_read         reduce using rule 110 (whileCuadP3 -> .)
    PR_return       reduce using rule 110 (whileCuadP3 -> .)
    PR_circulo      reduce using rule 110 (whileCuadP3 -> .)
    PR_rectangulo   reduce using rule 110 (whileCuadP3 -> .)
    PR_espiral      reduce using rule 110 (whileCuadP3 -> .)
    PR_estrella     reduce using rule 110 (whileCuadP3 -> .)
    TO_BRACKCLO     reduce using rule 110 (whileCuadP3 -> .)

    whileCuadP3                    shift and go to state 285

state 277

    (32) funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else . agregaIfCuadP3
    (107) agregaIfCuadP3 -> .

    PR_While        reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_if           reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_int          reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_float        reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_bool         reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_void         reduce using rule 107 (agregaIfCuadP3 -> .)
    ID              reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_write        reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_read         reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_return       reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_circulo      reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_rectangulo   reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_espiral      reduce using rule 107 (agregaIfCuadP3 -> .)
    PR_estrella     reduce using rule 107 (agregaIfCuadP3 -> .)
    TO_BRACKCLO     reduce using rule 107 (agregaIfCuadP3 -> .)

    agregaIfCuadP3                 shift and go to state 286

state 278

    (33) else -> agregaIfCuadP2 . PR_else TO_BRACKOP mainBloque TO_BRACKCLO

    PR_else         shift and go to state 287


state 279

    (34) else -> empty .

    PR_While        reduce using rule 34 (else -> empty .)
    PR_if           reduce using rule 34 (else -> empty .)
    PR_int          reduce using rule 34 (else -> empty .)
    PR_float        reduce using rule 34 (else -> empty .)
    PR_bool         reduce using rule 34 (else -> empty .)
    PR_void         reduce using rule 34 (else -> empty .)
    ID              reduce using rule 34 (else -> empty .)
    PR_write        reduce using rule 34 (else -> empty .)
    PR_read         reduce using rule 34 (else -> empty .)
    PR_return       reduce using rule 34 (else -> empty .)
    PR_circulo      reduce using rule 34 (else -> empty .)
    PR_rectangulo   reduce using rule 34 (else -> empty .)
    PR_espiral      reduce using rule 34 (else -> empty .)
    PR_estrella     reduce using rule 34 (else -> empty .)
    TO_BRACKCLO     reduce using rule 34 (else -> empty .)


state 280

    (29) funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .

    PR_While        reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_if           reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_int          reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_float        reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_bool         reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_void         reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    ID              reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_write        reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_read         reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_return       reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_circulo      reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_rectangulo   reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_espiral      reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    PR_estrella     reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)
    TO_BRACKCLO     reduce using rule 29 (funcIgual -> ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad .)


state 281

    (82) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa . circuloCuad
    (114) circuloCuad -> .

    PR_While        reduce using rule 114 (circuloCuad -> .)
    PR_if           reduce using rule 114 (circuloCuad -> .)
    PR_int          reduce using rule 114 (circuloCuad -> .)
    PR_float        reduce using rule 114 (circuloCuad -> .)
    PR_bool         reduce using rule 114 (circuloCuad -> .)
    PR_void         reduce using rule 114 (circuloCuad -> .)
    ID              reduce using rule 114 (circuloCuad -> .)
    PR_write        reduce using rule 114 (circuloCuad -> .)
    PR_read         reduce using rule 114 (circuloCuad -> .)
    PR_return       reduce using rule 114 (circuloCuad -> .)
    PR_circulo      reduce using rule 114 (circuloCuad -> .)
    PR_rectangulo   reduce using rule 114 (circuloCuad -> .)
    PR_espiral      reduce using rule 114 (circuloCuad -> .)
    PR_estrella     reduce using rule 114 (circuloCuad -> .)
    TO_BRACKCLO     reduce using rule 114 (circuloCuad -> .)
    OP_POW          reduce using rule 114 (circuloCuad -> .)
    OP_MULT         reduce using rule 114 (circuloCuad -> .)
    OP_DIV          reduce using rule 114 (circuloCuad -> .)
    OP_MOD          reduce using rule 114 (circuloCuad -> .)
    OP_SUBS         reduce using rule 114 (circuloCuad -> .)
    OP_ADD          reduce using rule 114 (circuloCuad -> .)
    OP_EQUALTO      reduce using rule 114 (circuloCuad -> .)
    OP_DIFF         reduce using rule 114 (circuloCuad -> .)
    OP_LESST        reduce using rule 114 (circuloCuad -> .)
    OP_LESSTEQ      reduce using rule 114 (circuloCuad -> .)
    OP_GREATT       reduce using rule 114 (circuloCuad -> .)
    OP_GREATTEQ     reduce using rule 114 (circuloCuad -> .)
    PR_and          reduce using rule 114 (circuloCuad -> .)
    PR_or           reduce using rule 114 (circuloCuad -> .)
    TO_PARCLO       reduce using rule 114 (circuloCuad -> .)
    TO_CBRACKCLO    reduce using rule 114 (circuloCuad -> .)
    TO_PuntoComa    reduce using rule 114 (circuloCuad -> .)

    circuloCuad                    shift and go to state 288

state 282

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa . rectanguloCuad
    (115) rectanguloCuad -> .

    PR_While        reduce using rule 115 (rectanguloCuad -> .)
    PR_if           reduce using rule 115 (rectanguloCuad -> .)
    PR_int          reduce using rule 115 (rectanguloCuad -> .)
    PR_float        reduce using rule 115 (rectanguloCuad -> .)
    PR_bool         reduce using rule 115 (rectanguloCuad -> .)
    PR_void         reduce using rule 115 (rectanguloCuad -> .)
    ID              reduce using rule 115 (rectanguloCuad -> .)
    PR_write        reduce using rule 115 (rectanguloCuad -> .)
    PR_read         reduce using rule 115 (rectanguloCuad -> .)
    PR_return       reduce using rule 115 (rectanguloCuad -> .)
    PR_circulo      reduce using rule 115 (rectanguloCuad -> .)
    PR_rectangulo   reduce using rule 115 (rectanguloCuad -> .)
    PR_espiral      reduce using rule 115 (rectanguloCuad -> .)
    PR_estrella     reduce using rule 115 (rectanguloCuad -> .)
    TO_BRACKCLO     reduce using rule 115 (rectanguloCuad -> .)
    OP_POW          reduce using rule 115 (rectanguloCuad -> .)
    OP_MULT         reduce using rule 115 (rectanguloCuad -> .)
    OP_DIV          reduce using rule 115 (rectanguloCuad -> .)
    OP_MOD          reduce using rule 115 (rectanguloCuad -> .)
    OP_SUBS         reduce using rule 115 (rectanguloCuad -> .)
    OP_ADD          reduce using rule 115 (rectanguloCuad -> .)
    OP_EQUALTO      reduce using rule 115 (rectanguloCuad -> .)
    OP_DIFF         reduce using rule 115 (rectanguloCuad -> .)
    OP_LESST        reduce using rule 115 (rectanguloCuad -> .)
    OP_LESSTEQ      reduce using rule 115 (rectanguloCuad -> .)
    OP_GREATT       reduce using rule 115 (rectanguloCuad -> .)
    OP_GREATTEQ     reduce using rule 115 (rectanguloCuad -> .)
    PR_and          reduce using rule 115 (rectanguloCuad -> .)
    PR_or           reduce using rule 115 (rectanguloCuad -> .)
    TO_PARCLO       reduce using rule 115 (rectanguloCuad -> .)
    TO_CBRACKCLO    reduce using rule 115 (rectanguloCuad -> .)
    TO_PuntoComa    reduce using rule 115 (rectanguloCuad -> .)

    rectanguloCuad                 shift and go to state 289

state 283

    (84) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa . espiralCuad
    (116) espiralCuad -> .

    PR_While        reduce using rule 116 (espiralCuad -> .)
    PR_if           reduce using rule 116 (espiralCuad -> .)
    PR_int          reduce using rule 116 (espiralCuad -> .)
    PR_float        reduce using rule 116 (espiralCuad -> .)
    PR_bool         reduce using rule 116 (espiralCuad -> .)
    PR_void         reduce using rule 116 (espiralCuad -> .)
    ID              reduce using rule 116 (espiralCuad -> .)
    PR_write        reduce using rule 116 (espiralCuad -> .)
    PR_read         reduce using rule 116 (espiralCuad -> .)
    PR_return       reduce using rule 116 (espiralCuad -> .)
    PR_circulo      reduce using rule 116 (espiralCuad -> .)
    PR_rectangulo   reduce using rule 116 (espiralCuad -> .)
    PR_espiral      reduce using rule 116 (espiralCuad -> .)
    PR_estrella     reduce using rule 116 (espiralCuad -> .)
    TO_BRACKCLO     reduce using rule 116 (espiralCuad -> .)
    OP_POW          reduce using rule 116 (espiralCuad -> .)
    OP_MULT         reduce using rule 116 (espiralCuad -> .)
    OP_DIV          reduce using rule 116 (espiralCuad -> .)
    OP_MOD          reduce using rule 116 (espiralCuad -> .)
    OP_SUBS         reduce using rule 116 (espiralCuad -> .)
    OP_ADD          reduce using rule 116 (espiralCuad -> .)
    OP_EQUALTO      reduce using rule 116 (espiralCuad -> .)
    OP_DIFF         reduce using rule 116 (espiralCuad -> .)
    OP_LESST        reduce using rule 116 (espiralCuad -> .)
    OP_LESSTEQ      reduce using rule 116 (espiralCuad -> .)
    OP_GREATT       reduce using rule 116 (espiralCuad -> .)
    OP_GREATTEQ     reduce using rule 116 (espiralCuad -> .)
    PR_and          reduce using rule 116 (espiralCuad -> .)
    PR_or           reduce using rule 116 (espiralCuad -> .)
    TO_PARCLO       reduce using rule 116 (espiralCuad -> .)
    TO_CBRACKCLO    reduce using rule 116 (espiralCuad -> .)
    TO_PuntoComa    reduce using rule 116 (espiralCuad -> .)

    espiralCuad                    shift and go to state 290

state 284

    (85) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa . estrellaCuad
    (117) estrellaCuad -> .

    PR_While        reduce using rule 117 (estrellaCuad -> .)
    PR_if           reduce using rule 117 (estrellaCuad -> .)
    PR_int          reduce using rule 117 (estrellaCuad -> .)
    PR_float        reduce using rule 117 (estrellaCuad -> .)
    PR_bool         reduce using rule 117 (estrellaCuad -> .)
    PR_void         reduce using rule 117 (estrellaCuad -> .)
    ID              reduce using rule 117 (estrellaCuad -> .)
    PR_write        reduce using rule 117 (estrellaCuad -> .)
    PR_read         reduce using rule 117 (estrellaCuad -> .)
    PR_return       reduce using rule 117 (estrellaCuad -> .)
    PR_circulo      reduce using rule 117 (estrellaCuad -> .)
    PR_rectangulo   reduce using rule 117 (estrellaCuad -> .)
    PR_espiral      reduce using rule 117 (estrellaCuad -> .)
    PR_estrella     reduce using rule 117 (estrellaCuad -> .)
    TO_BRACKCLO     reduce using rule 117 (estrellaCuad -> .)
    OP_POW          reduce using rule 117 (estrellaCuad -> .)
    OP_MULT         reduce using rule 117 (estrellaCuad -> .)
    OP_DIV          reduce using rule 117 (estrellaCuad -> .)
    OP_MOD          reduce using rule 117 (estrellaCuad -> .)
    OP_SUBS         reduce using rule 117 (estrellaCuad -> .)
    OP_ADD          reduce using rule 117 (estrellaCuad -> .)
    OP_EQUALTO      reduce using rule 117 (estrellaCuad -> .)
    OP_DIFF         reduce using rule 117 (estrellaCuad -> .)
    OP_LESST        reduce using rule 117 (estrellaCuad -> .)
    OP_LESSTEQ      reduce using rule 117 (estrellaCuad -> .)
    OP_GREATT       reduce using rule 117 (estrellaCuad -> .)
    OP_GREATTEQ     reduce using rule 117 (estrellaCuad -> .)
    PR_and          reduce using rule 117 (estrellaCuad -> .)
    PR_or           reduce using rule 117 (estrellaCuad -> .)
    TO_PARCLO       reduce using rule 117 (estrellaCuad -> .)
    TO_CBRACKCLO    reduce using rule 117 (estrellaCuad -> .)
    TO_PuntoComa    reduce using rule 117 (estrellaCuad -> .)

    estrellaCuad                   shift and go to state 291

state 285

    (31) funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .

    PR_While        reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_if           reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_int          reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_float        reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_bool         reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_void         reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    ID              reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_write        reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_read         reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_return       reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_circulo      reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_rectangulo   reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_espiral      reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    PR_estrella     reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)
    TO_BRACKCLO     reduce using rule 31 (funcCiclos -> PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3 .)


state 286

    (32) funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .

    PR_While        reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_if           reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_int          reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_float        reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_bool         reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_void         reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    ID              reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_write        reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_read         reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_return       reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_circulo      reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_rectangulo   reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_espiral      reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    PR_estrella     reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)
    TO_BRACKCLO     reduce using rule 32 (funcCondicionales -> PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3 .)


state 287

    (33) else -> agregaIfCuadP2 PR_else . TO_BRACKOP mainBloque TO_BRACKCLO

    TO_BRACKOP      shift and go to state 292


state 288

    (82) funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .

    PR_While        reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_if           reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_int          reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_float        reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_bool         reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_void         reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    ID              reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_write        reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_read         reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_return       reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_circulo      reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_rectangulo   reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_espiral      reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_estrella     reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    TO_BRACKCLO     reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_POW          reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_MULT         reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_DIV          reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_MOD          reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_SUBS         reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_ADD          reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_EQUALTO      reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_DIFF         reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_LESST        reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_LESSTEQ      reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_GREATT       reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    OP_GREATTEQ     reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_and          reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    PR_or           reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    TO_PARCLO       reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    TO_CBRACKCLO    reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)
    TO_PuntoComa    reduce using rule 82 (funcionesDibuja -> PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad .)


state 289

    (83) funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .

    PR_While        reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_if           reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_int          reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_float        reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_bool         reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_void         reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    ID              reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_write        reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_read         reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_return       reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_circulo      reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_rectangulo   reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_espiral      reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_estrella     reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    TO_BRACKCLO     reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_POW          reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_MULT         reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_DIV          reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_MOD          reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_SUBS         reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_ADD          reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_EQUALTO      reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_DIFF         reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_LESST        reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_LESSTEQ      reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_GREATT       reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    OP_GREATTEQ     reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_and          reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    PR_or           reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    TO_PARCLO       reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    TO_CBRACKCLO    reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)
    TO_PuntoComa    reduce using rule 83 (funcionesDibuja -> PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad .)


state 290

    (84) funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .

    PR_While        reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_if           reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_int          reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_float        reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_bool         reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_void         reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    ID              reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_write        reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_read         reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_return       reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_circulo      reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_rectangulo   reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_espiral      reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_estrella     reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    TO_BRACKCLO     reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_POW          reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_MULT         reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_DIV          reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_MOD          reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_SUBS         reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_ADD          reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_EQUALTO      reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_DIFF         reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_LESST        reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_LESSTEQ      reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_GREATT       reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    OP_GREATTEQ     reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_and          reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    PR_or           reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    TO_PARCLO       reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    TO_CBRACKCLO    reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)
    TO_PuntoComa    reduce using rule 84 (funcionesDibuja -> PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad .)


state 291

    (85) funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .

    PR_While        reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_if           reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_int          reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_float        reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_bool         reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_void         reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    ID              reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_write        reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_read         reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_return       reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_circulo      reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_rectangulo   reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_espiral      reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_estrella     reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    TO_BRACKCLO     reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_POW          reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_MULT         reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_DIV          reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_MOD          reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_SUBS         reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_ADD          reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_EQUALTO      reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_DIFF         reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_LESST        reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_LESSTEQ      reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_GREATT       reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    OP_GREATTEQ     reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_and          reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    PR_or           reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    TO_PARCLO       reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    TO_CBRACKCLO    reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)
    TO_PuntoComa    reduce using rule 85 (funcionesDibuja -> PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad .)


state 292

    (33) else -> agregaIfCuadP2 PR_else TO_BRACKOP . mainBloque TO_BRACKCLO
    (15) mainBloque -> . funcCiclos mainBloque
    (16) mainBloque -> . funcCondicionales mainBloque
    (17) mainBloque -> . defVariables mainBloque
    (18) mainBloque -> . llamadaDeFunciones mainBloque
    (19) mainBloque -> . funcIgual mainBloque
    (20) mainBloque -> . funcWrite mainBloque
    (21) mainBloque -> . funcRead mainBloque
    (22) mainBloque -> . funcReturn mainBloque
    (23) mainBloque -> . empty
    (31) funcCiclos -> . PR_While whileCuadP1 TO_PAROP defExpresiones TO_PARCLO whileCuadP2 TO_BRACKOP mainBloque TO_BRACKCLO whileCuadP3
    (32) funcCondicionales -> . PR_if TO_PAROP defExpresiones TO_PARCLO agregaIfCuadP1 TO_BRACKOP mainBloque TO_BRACKCLO else agregaIfCuadP3
    (39) defVariables -> . PR_int tipoVar defVar1 TO_PuntoComa
    (40) defVariables -> . PR_float tipoVar defVar1 TO_PuntoComa
    (41) defVariables -> . PR_bool tipoVar defVar1 TO_PuntoComa
    (42) defVariables -> . PR_void tipoVar defVar1 TO_PuntoComa
    (79) llamadaDeFunciones -> . ID eraCuadruplo TO_PAROP decParamFuncs TO_PARCLO TO_PuntoComa goSubCuadruplo
    (80) llamadaDeFunciones -> . funcionesDibuja
    (81) llamadaDeFunciones -> . empty
    (28) funcIgual -> . ID pushPilaVar OP_EQUALS pushPilaOp defExpresiones TO_PuntoComa extraNeed agregaIgualCuad
    (29) funcIgual -> . ID TO_CBRACKOP defExpresiones TO_CBRACKCLO OP_EQUALS defExpresiones cuadruploAsignaArr TO_PuntoComa agregaIgualCuad
    (25) funcWrite -> . PR_write TO_PAROP ID agregaWriteCuad TO_PARCLO TO_PuntoComa
    (26) funcRead -> . PR_read TO_PAROP ID agregaReadCuad TO_PARCLO TO_PuntoComa
    (27) funcReturn -> . PR_return TO_PAROP ID agregaReturnCuad TO_PARCLO TO_PuntoComa
    (118) empty -> .
    (82) funcionesDibuja -> . PR_circulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa circuloCuad
    (83) funcionesDibuja -> . PR_rectangulo TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa rectanguloCuad
    (84) funcionesDibuja -> . PR_espiral TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa espiralCuad
    (85) funcionesDibuja -> . PR_estrella TO_PAROP ID TO_COMA ID TO_COMA ID TO_PARCLO TO_PuntoComa estrellaCuad

  ! shift/reduce conflict for PR_While resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_int resolved as shift
  ! shift/reduce conflict for PR_float resolved as shift
  ! shift/reduce conflict for PR_bool resolved as shift
  ! shift/reduce conflict for PR_void resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_write resolved as shift
  ! shift/reduce conflict for PR_read resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_circulo resolved as shift
  ! shift/reduce conflict for PR_rectangulo resolved as shift
  ! shift/reduce conflict for PR_espiral resolved as shift
  ! shift/reduce conflict for PR_estrella resolved as shift
    PR_While        shift and go to state 70
    PR_if           shift and go to state 71
    PR_int          shift and go to state 8
    PR_float        shift and go to state 9
    PR_bool         shift and go to state 10
    PR_void         shift and go to state 11
    ID              shift and go to state 72
    PR_write        shift and go to state 74
    PR_read         shift and go to state 75
    PR_return       shift and go to state 76
    TO_BRACKCLO     reduce using rule 118 (empty -> .)
    PR_circulo      shift and go to state 77
    PR_rectangulo   shift and go to state 78
    PR_espiral      shift and go to state 79
    PR_estrella     shift and go to state 80

  ! PR_While        [ reduce using rule 118 (empty -> .) ]
  ! PR_if           [ reduce using rule 118 (empty -> .) ]
  ! PR_int          [ reduce using rule 118 (empty -> .) ]
  ! PR_float        [ reduce using rule 118 (empty -> .) ]
  ! PR_bool         [ reduce using rule 118 (empty -> .) ]
  ! PR_void         [ reduce using rule 118 (empty -> .) ]
  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! PR_write        [ reduce using rule 118 (empty -> .) ]
  ! PR_read         [ reduce using rule 118 (empty -> .) ]
  ! PR_return       [ reduce using rule 118 (empty -> .) ]
  ! PR_circulo      [ reduce using rule 118 (empty -> .) ]
  ! PR_rectangulo   [ reduce using rule 118 (empty -> .) ]
  ! PR_espiral      [ reduce using rule 118 (empty -> .) ]
  ! PR_estrella     [ reduce using rule 118 (empty -> .) ]

    mainBloque                     shift and go to state 293
    funcCiclos                     shift and go to state 61
    funcCondicionales              shift and go to state 62
    defVariables                   shift and go to state 63
    llamadaDeFunciones             shift and go to state 64
    funcIgual                      shift and go to state 65
    funcWrite                      shift and go to state 66
    funcRead                       shift and go to state 67
    funcReturn                     shift and go to state 68
    empty                          shift and go to state 69
    funcionesDibuja                shift and go to state 73

state 293

    (33) else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque . TO_BRACKCLO

    TO_BRACKCLO     shift and go to state 294


state 294

    (33) else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .

    PR_While        reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_if           reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_int          reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_float        reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_bool         reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_void         reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    ID              reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_write        reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_read         reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_return       reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_circulo      reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_rectangulo   reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_espiral      reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    PR_estrella     reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)
    TO_BRACKCLO     reduce using rule 33 (else -> agregaIfCuadP2 PR_else TO_BRACKOP mainBloque TO_BRACKCLO .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PR_While in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 57 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 61 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 62 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 63 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 64 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 64 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 65 resolved as shift
WARNING: shift/reduce conflict for ID in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 65 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 66 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 67 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 68 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 136 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 211 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 211 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 239 resolved as shift
WARNING: shift/reduce conflict for ID in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 239 resolved as shift
WARNING: shift/reduce conflict for PR_While in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_int in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_float in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_bool in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_void in state 292 resolved as shift
WARNING: shift/reduce conflict for ID in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_write in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_read in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_circulo in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_rectangulo in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_espiral in state 292 resolved as shift
WARNING: shift/reduce conflict for PR_estrella in state 292 resolved as shift
WARNING: reduce/reduce conflict in state 69 resolved using rule (mainBloque -> empty)
WARNING: rejected rule (llamadaDeFunciones -> empty) in state 69
